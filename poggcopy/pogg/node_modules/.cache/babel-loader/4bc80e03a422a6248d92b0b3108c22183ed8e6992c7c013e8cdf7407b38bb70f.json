{"ast":null,"code":"\"use strict\";\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\nvar _isInteger = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/number/is-integer\"));\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty2(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar equalObjects = require('./equals').default;\nvar decode = require('./decode').default;\nvar ParseError = require('./ParseError').default;\nvar ParsePolygon = require('./ParsePolygon').default;\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if ((0, _isArray.default)(needle)) {\n    var _iterator = _createForOfIteratorHelper(needle),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var need = _step.value;\n        if (contains(haystack, need)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n  return object;\n}\n\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n  var obj = object;\n  var q = query;\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n  obj.className = className;\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return eqlFn(obj, compareTo);\n}\n\n/**\n * @typedef RelativeTimeToDateResult\n * @property {string} status The conversion status, `error` if conversion failed or\n * `success` if conversion succeeded.\n * @property {string} info The error message if conversion failed, or the relative\n * time indication (`past`, `present`, `future`) if conversion succeeded.\n * @property {Date|undefined} result The converted date, or `undefined` if conversion\n * failed.\n */\n/**\n * Converts human readable relative date string, for example, 'in 10 days' to a date\n * relative to now.\n *\n * @param {string} text The text to convert.\n * @param {Date} [now=new Date()] The date from which add or subtract. Default is now.\n * @returns {RelativeTimeToDateResult}\n */\nfunction relativeTimeToDate(text) {\n  var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n  text = text.toLowerCase();\n  var parts = text.split(' ');\n\n  // Filter out whitespace\n  parts = (0, _filter.default)(parts).call(parts, function (part) {\n    return part !== '';\n  });\n  var future = parts[0] === 'in';\n  var past = parts[parts.length - 1] === 'ago';\n  if (!future && !past && text !== 'now') {\n    return {\n      status: 'error',\n      info: \"Time should either start with 'in' or end with 'ago'\"\n    };\n  }\n  if (future && past) {\n    return {\n      status: 'error',\n      info: \"Time cannot have both 'in' and 'ago'\"\n    };\n  }\n\n  // strip the 'ago' or 'in'\n  if (future) {\n    parts = (0, _slice.default)(parts).call(parts, 1);\n  } else {\n    // past\n    parts = (0, _slice.default)(parts).call(parts, 0, parts.length - 1);\n  }\n  if (parts.length % 2 !== 0 && text !== 'now') {\n    return {\n      status: 'error',\n      info: 'Invalid time string. Dangling unit or number.'\n    };\n  }\n  var pairs = [];\n  while (parts.length) {\n    pairs.push([parts.shift(), parts.shift()]);\n  }\n  var seconds = 0;\n  for (var _i = 0, _pairs = pairs; _i < _pairs.length; _i++) {\n    var _pairs$_i = (0, _slicedToArray2.default)(_pairs[_i], 2),\n      num = _pairs$_i[0],\n      interval = _pairs$_i[1];\n    var val = Number(num);\n    if (!(0, _isInteger.default)(val)) {\n      return {\n        status: 'error',\n        info: \"'\".concat(num, \"' is not an integer.\")\n      };\n    }\n    switch (interval) {\n      case 'yr':\n      case 'yrs':\n      case 'year':\n      case 'years':\n        seconds += val * 31536000; // 365 * 24 * 60 * 60\n        break;\n      case 'wk':\n      case 'wks':\n      case 'week':\n      case 'weeks':\n        seconds += val * 604800; // 7 * 24 * 60 * 60\n        break;\n      case 'd':\n      case 'day':\n      case 'days':\n        seconds += val * 86400; // 24 * 60 * 60\n        break;\n      case 'hr':\n      case 'hrs':\n      case 'hour':\n      case 'hours':\n        seconds += val * 3600; // 60 * 60\n        break;\n      case 'min':\n      case 'mins':\n      case 'minute':\n      case 'minutes':\n        seconds += val * 60;\n        break;\n      case 'sec':\n      case 'secs':\n      case 'second':\n      case 'seconds':\n        seconds += val;\n        break;\n      default:\n        return {\n          status: 'error',\n          info: \"Invalid interval: '\".concat(interval, \"'\")\n        };\n    }\n  }\n  var milliseconds = seconds * 1000;\n  if (future) {\n    return {\n      status: 'success',\n      info: 'future',\n      result: new Date(now.valueOf() + milliseconds)\n    };\n  } else if (past) {\n    return {\n      status: 'success',\n      info: 'past',\n      result: new Date(now.valueOf() - milliseconds)\n    };\n  } else {\n    return {\n      status: 'success',\n      info: 'present',\n      result: new Date(now.valueOf())\n    };\n  }\n}\n\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n  var i;\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  }\n  // Equality (or Array contains) cases\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n    return object[key] === constraints;\n  }\n  var compareTo;\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  }\n  // More complex cases\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    }\n    // is it a $relativeTime? convert to date\n    if (compareTo['$relativeTime']) {\n      var parserResult = relativeTimeToDate(compareTo['$relativeTime']);\n      if (parserResult.status !== 'success') {\n        var _context2;\n        throw new ParseError(ParseError.INVALID_JSON, (0, _concat.default)(_context2 = \"bad $relativeTime (\".concat(key, \") value. \")).call(_context2, parserResult.info));\n      }\n      compareTo = parserResult.result;\n    }\n    // Compare Date Object or Date String\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n        break;\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n        break;\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n        break;\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n        break;\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n        break;\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context3;\n          if ((0, _indexOf.default)(_context3 = object[key]).call(_context3, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n        break;\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n          break;\n        }\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          }\n          // JS doesn't support perl-style escaping\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', '');\n          // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n          var exp = new RegExp(expString, modifiers);\n          if (!exp.test(object[key])) {\n            return false;\n          }\n          break;\n        }\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n          for (var _i2 = 0; _i2 < subQueryObjects.length; _i2 += 1) {\n            var subObject = transformObject(subQueryObjects[_i2]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n          return false;\n        }\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n          for (var _i3 = 0; _i3 < _subQueryObjects.length; _i3 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i3]);\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n          return false;\n        }\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n          for (var _i4 = 0; _i4 < _subQueryObjects2.length; _i4 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i4]);\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n          return false;\n        }\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n          for (var _i5 = 0; _i5 < _subQueryObjects3.length; _i5 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i5]);\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n          return true;\n        }\n      case '$containedBy':\n        {\n          var _iterator2 = _createForOfIteratorHelper(object[key]),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var value = _step2.value;\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          return true;\n        }\n      case '$geoWithin':\n        {\n          if (compareTo.$polygon) {\n            var _context4;\n            var points = (0, _map.default)(_context4 = compareTo.$polygon).call(_context4, function (geoPoint) {\n              return [geoPoint.latitude, geoPoint.longitude];\n            });\n            var polygon = new ParsePolygon(points);\n            return polygon.containsPoint(object[key]);\n          }\n          if (compareTo.$centerSphere) {\n            var _compareTo$$centerSph = (0, _slicedToArray2.default)(compareTo.$centerSphere, 2),\n              WGS84Point = _compareTo$$centerSph[0],\n              maxDistance = _compareTo$$centerSph[1];\n            var centerPoint = new ParseGeoPoint({\n              latitude: WGS84Point[1],\n              longitude: WGS84Point[0]\n            });\n            var point = new ParseGeoPoint(object[key]);\n            var _distance = point.radiansTo(centerPoint);\n            return _distance <= maxDistance;\n          }\n          break;\n        }\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n          var _point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(_point);\n        }\n      default:\n        return false;\n    }\n  }\n  return true;\n}\nfunction validateQuery(query /*: any*/) {\n  var _context5;\n  var q = query;\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context5 = (0, _keys.default)(q)).call(_context5, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;","map":{"version":3,"names":["_sliceInstanceProperty2","require","_Array$from","_Symbol","_getIteratorMethod","_Array$isArray2","_interopRequireDefault","_typeof2","_slicedToArray2","_isArray","_indexOf","_filter","_slice","_isInteger","_concat","_map","_forEach","_keys","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","value","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_context6","_arrayLikeToArray","Object","prototype","toString","constructor","name","test","arr","len","arr2","Array","equalObjects","default","decode","ParseError","ParsePolygon","ParseGeoPoint","contains","haystack","needle","__type","ptr","objectId","className","_iterator","_step","need","transformObject","object","_toFullJSON","matchesQuery","objects","query","obj","q","toJSON","where","field","matchesKeyConstraints","equalObjectsGeneric","compareTo","eqlFn","relativeTimeToDate","text","now","arguments","undefined","Date","toLowerCase","parts","split","part","future","past","status","info","pairs","push","shift","seconds","_i","_pairs","_pairs$_i","num","interval","val","Number","concat","milliseconds","result","valueOf","key","constraints","keyComponents","subObjectKey","keyRemainder","join","INVALID_KEY_NAME","_context","condition","parserResult","_context2","INVALID_JSON","isNaN","iso","_context3","propertyExists","existenceIsRequired","expString","escapeEnd","escapeStart","substring","replace","Math","max","modifiers","$options","exp","RegExp","distance","radiansTo","$maxDistance","Infinity","southWest","$box","northEast","latitude","longitude","subQueryObjects","index","_i2","subObject","_subQueryObjects","_i3","_subObject","_subQueryObjects2","_i4","_subObject2","_subQueryObjects3","_i5","_subObject3","_iterator2","_step2","$polygon","_context4","points","geoPoint","polygon","containsPoint","$centerSphere","_compareTo$$centerSph","WGS84Point","maxDistance","centerPoint","point","_distance","_polygon","coordinates","_point","$point","validateQuery","_context5","specialQuerykeys","$regex","match","INVALID_QUERY","OfflineQuery","module","exports"],"sources":["/home/mspadafo/compsci/MWD/pogg/node_modules/parse/lib/browser/OfflineQuery.js"],"sourcesContent":["\"use strict\";\n\nvar _sliceInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$isArray2 = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _filter = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\"));\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\nvar _isInteger = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/number/is-integer\"));\nvar _concat = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/concat\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/map\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray2(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty2(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nvar equalObjects = require('./equals').default;\nvar decode = require('./decode').default;\nvar ParseError = require('./ParseError').default;\nvar ParsePolygon = require('./ParsePolygon').default;\nvar ParseGeoPoint = require('./ParseGeoPoint').default;\n/**\n * contains -- Determines if an object is contained in a list with special handling for Parse pointers.\n *\n * @param haystack\n * @param needle\n * @private\n * @returns {boolean}\n */\nfunction contains(haystack, needle) {\n  if (needle && needle.__type && (needle.__type === 'Pointer' || needle.__type === 'Object')) {\n    for (var i in haystack) {\n      var ptr = haystack[i];\n      if (typeof ptr === 'string' && ptr === needle.objectId) {\n        return true;\n      }\n      if (ptr.className === needle.className && ptr.objectId === needle.objectId) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if ((0, _isArray.default)(needle)) {\n    var _iterator = _createForOfIteratorHelper(needle),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var need = _step.value;\n        if (contains(haystack, need)) {\n          return true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return (0, _indexOf.default)(haystack).call(haystack, needle) > -1;\n}\nfunction transformObject(object) {\n  if (object._toFullJSON) {\n    return object._toFullJSON();\n  }\n  return object;\n}\n\n/**\n * matchesQuery -- Determines if an object would be returned by a Parse Query\n * It's a lightweight, where-clause only implementation of a full query engine.\n * Since we find queries that match objects, rather than objects that match\n * queries, we can avoid building a full-blown query tool.\n *\n * @param className\n * @param object\n * @param objects\n * @param query\n * @private\n * @returns {boolean}\n */\nfunction matchesQuery(className, object, objects, query) {\n  if (object.className !== className) {\n    return false;\n  }\n  var obj = object;\n  var q = query;\n  if (object.toJSON) {\n    obj = object.toJSON();\n  }\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n  obj.className = className;\n  for (var field in q) {\n    if (!matchesKeyConstraints(className, obj, objects, field, q[field])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction equalObjectsGeneric(obj, compareTo, eqlFn) {\n  if ((0, _isArray.default)(obj)) {\n    for (var i = 0; i < obj.length; i++) {\n      if (eqlFn(obj[i], compareTo)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  return eqlFn(obj, compareTo);\n}\n\n/**\n * @typedef RelativeTimeToDateResult\n * @property {string} status The conversion status, `error` if conversion failed or\n * `success` if conversion succeeded.\n * @property {string} info The error message if conversion failed, or the relative\n * time indication (`past`, `present`, `future`) if conversion succeeded.\n * @property {Date|undefined} result The converted date, or `undefined` if conversion\n * failed.\n */\n/**\n * Converts human readable relative date string, for example, 'in 10 days' to a date\n * relative to now.\n *\n * @param {string} text The text to convert.\n * @param {Date} [now=new Date()] The date from which add or subtract. Default is now.\n * @returns {RelativeTimeToDateResult}\n */\nfunction relativeTimeToDate(text) {\n  var now = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Date();\n  text = text.toLowerCase();\n  var parts = text.split(' ');\n\n  // Filter out whitespace\n  parts = (0, _filter.default)(parts).call(parts, function (part) {\n    return part !== '';\n  });\n  var future = parts[0] === 'in';\n  var past = parts[parts.length - 1] === 'ago';\n  if (!future && !past && text !== 'now') {\n    return {\n      status: 'error',\n      info: \"Time should either start with 'in' or end with 'ago'\"\n    };\n  }\n  if (future && past) {\n    return {\n      status: 'error',\n      info: \"Time cannot have both 'in' and 'ago'\"\n    };\n  }\n\n  // strip the 'ago' or 'in'\n  if (future) {\n    parts = (0, _slice.default)(parts).call(parts, 1);\n  } else {\n    // past\n    parts = (0, _slice.default)(parts).call(parts, 0, parts.length - 1);\n  }\n  if (parts.length % 2 !== 0 && text !== 'now') {\n    return {\n      status: 'error',\n      info: 'Invalid time string. Dangling unit or number.'\n    };\n  }\n  var pairs = [];\n  while (parts.length) {\n    pairs.push([parts.shift(), parts.shift()]);\n  }\n  var seconds = 0;\n  for (var _i = 0, _pairs = pairs; _i < _pairs.length; _i++) {\n    var _pairs$_i = (0, _slicedToArray2.default)(_pairs[_i], 2),\n      num = _pairs$_i[0],\n      interval = _pairs$_i[1];\n    var val = Number(num);\n    if (!(0, _isInteger.default)(val)) {\n      return {\n        status: 'error',\n        info: \"'\".concat(num, \"' is not an integer.\")\n      };\n    }\n    switch (interval) {\n      case 'yr':\n      case 'yrs':\n      case 'year':\n      case 'years':\n        seconds += val * 31536000; // 365 * 24 * 60 * 60\n        break;\n      case 'wk':\n      case 'wks':\n      case 'week':\n      case 'weeks':\n        seconds += val * 604800; // 7 * 24 * 60 * 60\n        break;\n      case 'd':\n      case 'day':\n      case 'days':\n        seconds += val * 86400; // 24 * 60 * 60\n        break;\n      case 'hr':\n      case 'hrs':\n      case 'hour':\n      case 'hours':\n        seconds += val * 3600; // 60 * 60\n        break;\n      case 'min':\n      case 'mins':\n      case 'minute':\n      case 'minutes':\n        seconds += val * 60;\n        break;\n      case 'sec':\n      case 'secs':\n      case 'second':\n      case 'seconds':\n        seconds += val;\n        break;\n      default:\n        return {\n          status: 'error',\n          info: \"Invalid interval: '\".concat(interval, \"'\")\n        };\n    }\n  }\n  var milliseconds = seconds * 1000;\n  if (future) {\n    return {\n      status: 'success',\n      info: 'future',\n      result: new Date(now.valueOf() + milliseconds)\n    };\n  } else if (past) {\n    return {\n      status: 'success',\n      info: 'past',\n      result: new Date(now.valueOf() - milliseconds)\n    };\n  } else {\n    return {\n      status: 'success',\n      info: 'present',\n      result: new Date(now.valueOf())\n    };\n  }\n}\n\n/**\n * Determines whether an object matches a single key's constraints\n *\n * @param className\n * @param object\n * @param objects\n * @param key\n * @param constraints\n * @private\n * @returns {boolean}\n */\nfunction matchesKeyConstraints(className, object, objects, key, constraints) {\n  if (constraints === null) {\n    return false;\n  }\n  if ((0, _indexOf.default)(key).call(key, '.') >= 0) {\n    // Key references a subobject\n    var keyComponents = key.split('.');\n    var subObjectKey = keyComponents[0];\n    var keyRemainder = (0, _slice.default)(keyComponents).call(keyComponents, 1).join('.');\n    return matchesKeyConstraints(className, object[subObjectKey] || {}, objects, keyRemainder, constraints);\n  }\n  var i;\n  if (key === '$or') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n  if (key === '$and') {\n    for (i = 0; i < constraints.length; i++) {\n      if (!matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$nor') {\n    for (i = 0; i < constraints.length; i++) {\n      if (matchesQuery(className, object, objects, constraints[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  if (key === '$relatedTo') {\n    // Bail! We can't handle relational queries locally\n    return false;\n  }\n  if (!/^[A-Za-z][0-9A-Za-z_]*$/.test(key)) {\n    throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid Key: \".concat(key));\n  }\n  // Equality (or Array contains) cases\n  if ((0, _typeof2.default)(constraints) !== 'object') {\n    if ((0, _isArray.default)(object[key])) {\n      var _context;\n      return (0, _indexOf.default)(_context = object[key]).call(_context, constraints) > -1;\n    }\n    return object[key] === constraints;\n  }\n  var compareTo;\n  if (constraints.__type) {\n    if (constraints.__type === 'Pointer') {\n      return equalObjectsGeneric(object[key], constraints, function (obj, ptr) {\n        return typeof obj !== 'undefined' && ptr.className === obj.className && ptr.objectId === obj.objectId;\n      });\n    }\n    return equalObjectsGeneric(decode(object[key]), decode(constraints), equalObjects);\n  }\n  // More complex cases\n  for (var condition in constraints) {\n    compareTo = constraints[condition];\n    if (compareTo.__type) {\n      compareTo = decode(compareTo);\n    }\n    // is it a $relativeTime? convert to date\n    if (compareTo['$relativeTime']) {\n      var parserResult = relativeTimeToDate(compareTo['$relativeTime']);\n      if (parserResult.status !== 'success') {\n        var _context2;\n        throw new ParseError(ParseError.INVALID_JSON, (0, _concat.default)(_context2 = \"bad $relativeTime (\".concat(key, \") value. \")).call(_context2, parserResult.info));\n      }\n      compareTo = parserResult.result;\n    }\n    // Compare Date Object or Date String\n    if (toString.call(compareTo) === '[object Date]' || typeof compareTo === 'string' && new Date(compareTo) !== 'Invalid Date' && !isNaN(new Date(compareTo))) {\n      object[key] = new Date(object[key].iso ? object[key].iso : object[key]);\n    }\n    switch (condition) {\n      case '$lt':\n        if (object[key] >= compareTo) {\n          return false;\n        }\n        break;\n      case '$lte':\n        if (object[key] > compareTo) {\n          return false;\n        }\n        break;\n      case '$gt':\n        if (object[key] <= compareTo) {\n          return false;\n        }\n        break;\n      case '$gte':\n        if (object[key] < compareTo) {\n          return false;\n        }\n        break;\n      case '$ne':\n        if (equalObjects(object[key], compareTo)) {\n          return false;\n        }\n        break;\n      case '$in':\n        if (!contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$nin':\n        if (contains(compareTo, object[key])) {\n          return false;\n        }\n        break;\n      case '$all':\n        for (i = 0; i < compareTo.length; i++) {\n          var _context3;\n          if ((0, _indexOf.default)(_context3 = object[key]).call(_context3, compareTo[i]) < 0) {\n            return false;\n          }\n        }\n        break;\n      case '$exists':\n        {\n          var propertyExists = typeof object[key] !== 'undefined';\n          var existenceIsRequired = constraints['$exists'];\n          if (typeof constraints['$exists'] !== 'boolean') {\n            // The SDK will never submit a non-boolean for $exists, but if someone\n            // tries to submit a non-boolean for $exits outside the SDKs, just ignore it.\n            break;\n          }\n          if (!propertyExists && existenceIsRequired || propertyExists && !existenceIsRequired) {\n            return false;\n          }\n          break;\n        }\n      case '$regex':\n        {\n          if ((0, _typeof2.default)(compareTo) === 'object') {\n            return compareTo.test(object[key]);\n          }\n          // JS doesn't support perl-style escaping\n          var expString = '';\n          var escapeEnd = -2;\n          var escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q');\n          while (escapeStart > -1) {\n            // Add the unescaped portion\n            expString += compareTo.substring(escapeEnd + 2, escapeStart);\n            escapeEnd = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\E', escapeStart);\n            if (escapeEnd > -1) {\n              expString += compareTo.substring(escapeStart + 2, escapeEnd).replace(/\\\\\\\\\\\\\\\\E/g, '\\\\E').replace(/\\W/g, '\\\\$&');\n            }\n            escapeStart = (0, _indexOf.default)(compareTo).call(compareTo, '\\\\Q', escapeEnd);\n          }\n          expString += compareTo.substring(Math.max(escapeStart, escapeEnd + 2));\n          var modifiers = constraints.$options || '';\n          modifiers = modifiers.replace('x', '').replace('s', '');\n          // Parse Server / Mongo support x and s modifiers but JS RegExp doesn't\n          var exp = new RegExp(expString, modifiers);\n          if (!exp.test(object[key])) {\n            return false;\n          }\n          break;\n        }\n      case '$nearSphere':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n          var distance = compareTo.radiansTo(object[key]);\n          var max = constraints.$maxDistance || Infinity;\n          return distance <= max;\n        }\n      case '$within':\n        {\n          if (!compareTo || !object[key]) {\n            return false;\n          }\n          var southWest = compareTo.$box[0];\n          var northEast = compareTo.$box[1];\n          if (southWest.latitude > northEast.latitude || southWest.longitude > northEast.longitude) {\n            // Invalid box, crosses the date line\n            return false;\n          }\n          return object[key].latitude > southWest.latitude && object[key].latitude < northEast.latitude && object[key].longitude > southWest.longitude && object[key].longitude < northEast.longitude;\n        }\n      case '$options':\n        // Not a query type, but a way to add options to $regex. Ignore and\n        // avoid the default\n        break;\n      case '$maxDistance':\n        // Not a query type, but a way to add a cap to $nearSphere. Ignore and\n        // avoid the default\n        break;\n      case '$select':\n        {\n          var subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n          for (var _i2 = 0; _i2 < subQueryObjects.length; _i2 += 1) {\n            var subObject = transformObject(subQueryObjects[_i2]);\n            return equalObjects(object[key], subObject[compareTo.key]);\n          }\n          return false;\n        }\n      case '$dontSelect':\n        {\n          var _subQueryObjects = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.query.className, obj, arr, compareTo.query.where);\n          });\n          for (var _i3 = 0; _i3 < _subQueryObjects.length; _i3 += 1) {\n            var _subObject = transformObject(_subQueryObjects[_i3]);\n            return !equalObjects(object[key], _subObject[compareTo.key]);\n          }\n          return false;\n        }\n      case '$inQuery':\n        {\n          var _subQueryObjects2 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n          for (var _i4 = 0; _i4 < _subQueryObjects2.length; _i4 += 1) {\n            var _subObject2 = transformObject(_subQueryObjects2[_i4]);\n            if (object[key].className === _subObject2.className && object[key].objectId === _subObject2.objectId) {\n              return true;\n            }\n          }\n          return false;\n        }\n      case '$notInQuery':\n        {\n          var _subQueryObjects3 = (0, _filter.default)(objects).call(objects, function (obj, index, arr) {\n            return matchesQuery(compareTo.className, obj, arr, compareTo.where);\n          });\n          for (var _i5 = 0; _i5 < _subQueryObjects3.length; _i5 += 1) {\n            var _subObject3 = transformObject(_subQueryObjects3[_i5]);\n            if (object[key].className === _subObject3.className && object[key].objectId === _subObject3.objectId) {\n              return false;\n            }\n          }\n          return true;\n        }\n      case '$containedBy':\n        {\n          var _iterator2 = _createForOfIteratorHelper(object[key]),\n            _step2;\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var value = _step2.value;\n              if (!contains(compareTo, value)) {\n                return false;\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n          return true;\n        }\n      case '$geoWithin':\n        {\n          if (compareTo.$polygon) {\n            var _context4;\n            var points = (0, _map.default)(_context4 = compareTo.$polygon).call(_context4, function (geoPoint) {\n              return [geoPoint.latitude, geoPoint.longitude];\n            });\n            var polygon = new ParsePolygon(points);\n            return polygon.containsPoint(object[key]);\n          }\n          if (compareTo.$centerSphere) {\n            var _compareTo$$centerSph = (0, _slicedToArray2.default)(compareTo.$centerSphere, 2),\n              WGS84Point = _compareTo$$centerSph[0],\n              maxDistance = _compareTo$$centerSph[1];\n            var centerPoint = new ParseGeoPoint({\n              latitude: WGS84Point[1],\n              longitude: WGS84Point[0]\n            });\n            var point = new ParseGeoPoint(object[key]);\n            var _distance = point.radiansTo(centerPoint);\n            return _distance <= maxDistance;\n          }\n          break;\n        }\n      case '$geoIntersects':\n        {\n          var _polygon = new ParsePolygon(object[key].coordinates);\n          var _point = new ParseGeoPoint(compareTo.$point);\n          return _polygon.containsPoint(_point);\n        }\n      default:\n        return false;\n    }\n  }\n  return true;\n}\nfunction validateQuery(query /*: any*/) {\n  var _context5;\n  var q = query;\n  if (query.toJSON) {\n    q = query.toJSON().where;\n  }\n  var specialQuerykeys = ['$and', '$or', '$nor', '_rperm', '_wperm', '_perishable_token', '_email_verify_token', '_email_verify_token_expires_at', '_account_lockout_expires_at', '_failed_login_count'];\n  (0, _forEach.default)(_context5 = (0, _keys.default)(q)).call(_context5, function (key) {\n    if (q && q[key] && q[key].$regex) {\n      if (typeof q[key].$options === 'string') {\n        if (!q[key].$options.match(/^[imxs]+$/)) {\n          throw new ParseError(ParseError.INVALID_QUERY, \"Bad $options value for query: \".concat(q[key].$options));\n        }\n      }\n    }\n    if ((0, _indexOf.default)(specialQuerykeys).call(specialQuerykeys, key) < 0 && !key.match(/^[a-zA-Z][a-zA-Z0-9_\\.]*$/)) {\n      throw new ParseError(ParseError.INVALID_KEY_NAME, \"Invalid key name: \".concat(key));\n    }\n  });\n}\nvar OfflineQuery = {\n  matchesQuery: matchesQuery,\n  validateQuery: validateQuery\n};\nmodule.exports = OfflineQuery;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}