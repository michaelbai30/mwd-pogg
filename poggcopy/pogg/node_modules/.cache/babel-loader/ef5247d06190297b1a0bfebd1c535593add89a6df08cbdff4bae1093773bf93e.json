{"ast":null,"code":"\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\nvar _promiseUtils = require(\"./promiseUtils\");\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} /* global WebSocket */\n// The LiveQuery client inner state\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n};\n\n// The event type the LiveQuery client should sent to server\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n};\n\n// The event we get back from LiveQuery server\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\n// The event the LiveQuery client should emit\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n};\n\n// The event the LiveQuery subscription should emit\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n  function LiveQueryClient(_ref) {\n    var _this;\n    var applicationId = _ref.applicationId,\n      serverURL = _ref.serverURL,\n      javascriptKey = _ref.javascriptKey,\n      masterKey = _ref.masterKey,\n      sessionToken = _ref.sessionToken,\n      installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED;\n\n    // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n    _this.on('error', function () {});\n    return _this;\n  }\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function () /*: any*/{\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription | undefined}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function (query /*: Object*/, sessionToken /*: ?string*/) /*: LiveQuerySubscription*/{\n      var _queryJSON$keys,\n        _queryJSON$watch,\n        _this2 = this;\n      if (!query) {\n        return;\n      }\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (_queryJSON$keys = (0, _keys.default)(queryJSON)) === null || _queryJSON$keys === void 0 ? void 0 : _queryJSON$keys.split(',');\n      var watch = (_queryJSON$watch = queryJSON.watch) === null || _queryJSON$watch === void 0 ? void 0 : _queryJSON$watch.split(',');\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields,\n          watch: watch\n        }\n      };\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      }).catch(function (error) {\n        subscription.subscribePromise.reject(error);\n      });\n      return subscription;\n    }\n\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     * @returns {Promise | undefined}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription /*: Object*/) /*: ?Promise*/{\n      var _this3 = this;\n      if (!subscription) {\n        return;\n      }\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      return this.connectPromise.then(function () {\n        return _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      }).then(function () {\n        return subscription.unsubscribePromise;\n      });\n    }\n\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n      this.socket = new WebSocketImplementation(this.serverURL);\n      this.socket.closingPromise = (0, _promiseUtils.resolvingPromise)();\n\n      // Bind WebSocket callbacks\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n      this.socket.onclose = function (event) {\n        _this4.socket.closingPromise.resolve(event);\n        _this4._handleWebSocketClose();\n      };\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n        _this5 = this;\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     * @returns {Promise | undefined} CloseEvent {@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close_event}\n     */\n  }, {\n    key: \"close\",\n    value: function () /*: ?Promise*/{\n      var _this$socket, _this$socket2, _context2;\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.DISCONNECTED;\n      (_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.close();\n      // Notify each subscription about the close\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._handleReset();\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n      return (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.closingPromise;\n    }\n\n    // ensure we start with valid state if connect is called again after close\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event /*: any*/) {\n      var data = event.data;\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n      var subscription = null;\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n          break;\n        case OP_EVENTS.ERROR:\n          {\n            var parseError = new _ParseError.default(data.code, data.error);\n            if (!this.id) {\n              this.connectPromise.reject(parseError);\n              this.state = CLIENT_STATE.DISCONNECTED;\n            }\n            if (data.requestId) {\n              if (subscription) {\n                subscription.subscribePromise.reject(parseError);\n                (0, _setTimeout2.default)(function () {\n                  return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n                }, 200);\n              }\n            } else {\n              this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n            }\n            if (data.error === 'Additional properties not allowed') {\n              this.additionalProperties = false;\n            }\n            if (data.reconnect) {\n              this._handleReconnect();\n            }\n            break;\n          }\n        case OP_EVENTS.UNSUBSCRIBED:\n          {\n            if (subscription) {\n              this.subscriptions.delete(data.requestId);\n              subscription.subscribed = false;\n              subscription.unsubscribePromise.resolve();\n            }\n            break;\n          }\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n            var override = false;\n            if (data.original) {\n              override = true;\n              delete data.original.__type;\n              // Check for removed fields\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n            delete data.object.__type;\n            var parseObject = _ParseObject.default.fromJSON(data.object, !(subscription.query && subscription.query._select) ? override : false);\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n      // Notify each subscription about the close\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error /*: any*/) {\n      var _context4;\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n        _this6 = this;\n      // if closed or currently reconnecting we stop attempting to reconnect\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts);\n\n      // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\nvar _default = LiveQueryClient;\nexports.default = _default;","map":{"version":3,"names":["_Reflect$construct","require","_sliceInstanceProperty","_Array$from","_Symbol","_getIteratorMethod","_Array$isArray","_Object$defineProperty","_interopRequireDefault","exports","value","default","_indexOf","_map","_keys","_stringify","_forEach","_values","_setTimeout2","_bind","_typeof2","_classCallCheck2","_createClass2","_assertThisInitialized2","_inherits2","_possibleConstructorReturn2","_getPrototypeOf2","_defineProperty2","_CoreManager","_EventEmitter2","_ParseObject","_LiveQuerySubscription","_promiseUtils","_ParseError","_createForOfIteratorHelper","o","allowArrayLike","it","_unsupportedIterableToArray","length","i","F","s","n","done","e","_e","f","TypeError","normalCompletion","didErr","err","call","step","next","_e2","return","minLen","_context6","_arrayLikeToArray","Object","prototype","toString","constructor","name","test","arr","len","arr2","Array","_createSuper","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","Super","result","NewTarget","arguments","apply","Reflect","sham","Proxy","Boolean","valueOf","CLIENT_STATE","INITIALIZED","CONNECTING","CONNECTED","CLOSED","RECONNECTING","DISCONNECTED","OP_TYPES","CONNECT","SUBSCRIBE","UNSUBSCRIBE","ERROR","OP_EVENTS","SUBSCRIBED","UNSUBSCRIBED","CREATE","UPDATE","ENTER","LEAVE","DELETE","CLIENT_EMMITER_TYPES","CLOSE","OPEN","SUBSCRIPTION_EMMITER_TYPES","generateInterval","k","Math","random","min","pow","LiveQueryClient","_EventEmitter","_super","_ref","_this","applicationId","serverURL","javascriptKey","masterKey","sessionToken","installationId","Error","reconnectHandle","attempts","id","requestId","undefined","additionalProperties","connectPromise","resolvingPromise","subscriptions","state","on","key","query","_queryJSON$keys","_queryJSON$watch","_this2","className","queryJSON","toJSON","where","fields","split","watch","subscribeRequest","op","subscription","set","then","socket","send","catch","error","subscribePromise","reject","_this3","unsubscribeRequest","unsubscribePromise","_this4","WebSocketImplementation","getWebSocketController","emit","closingPromise","onopen","_handleWebSocketOpen","onmessage","event","_handleWebSocketMessage","onclose","resolve","_handleWebSocketClose","onerror","_handleWebSocketError","_context","_this5","_this$socket","_this$socket2","_context2","close","_iterator","_step","subscribed","_handleReset","connectRequest","data","JSON","parse","get","response","clientId","resubscribe","parseError","code","reconnect","_handleReconnect","delete","override","original","__type","field","object","fromJSON","parseObject","_select","localDatastore","getLocalDatastore","isEnabled","_updateObjectIfPinned","_context3","_iterator2","_step2","_context4","_iterator3","_step3","_context5","_this6","time","clearTimeout","open","setWebSocketController","WebSocket","_default"],"sources":["/home/mspadafo/compsci/MWD/pogg/node_modules/parse/lib/browser/LiveQueryClient.js"],"sourcesContent":["\"use strict\";\n\nvar _Reflect$construct = require(\"@babel/runtime-corejs3/core-js-stable/reflect/construct\");\nvar _sliceInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\");\nvar _Array$from = require(\"@babel/runtime-corejs3/core-js-stable/array/from\");\nvar _Symbol = require(\"@babel/runtime-corejs3/core-js-stable/symbol\");\nvar _getIteratorMethod = require(\"@babel/runtime-corejs3/core-js/get-iterator-method\");\nvar _Array$isArray = require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _map = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/map\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/keys\"));\nvar _stringify = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/json/stringify\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _values = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/values\"));\nvar _setTimeout2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/set-timeout\"));\nvar _bind = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/bind\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _EventEmitter2 = _interopRequireDefault(require(\"./EventEmitter\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\nvar _LiveQuerySubscription = _interopRequireDefault(require(\"./LiveQuerySubscription\"));\nvar _promiseUtils = require(\"./promiseUtils\");\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n  if (!it) {\n    if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  var _context6;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = _sliceInstanceProperty(_context6 = Object.prototype.toString.call(o)).call(_context6, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n  return function () {\n    var Super = (0, _getPrototypeOf2.default)(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = (0, _getPrototypeOf2.default)(this).constructor;\n      result = _Reflect$construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return (0, _possibleConstructorReturn2.default)(this, result);\n  };\n}\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n  if (_Reflect$construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n} /* global WebSocket */\n// The LiveQuery client inner state\nvar CLIENT_STATE = {\n  INITIALIZED: 'initialized',\n  CONNECTING: 'connecting',\n  CONNECTED: 'connected',\n  CLOSED: 'closed',\n  RECONNECTING: 'reconnecting',\n  DISCONNECTED: 'disconnected'\n};\n\n// The event type the LiveQuery client should sent to server\nvar OP_TYPES = {\n  CONNECT: 'connect',\n  SUBSCRIBE: 'subscribe',\n  UNSUBSCRIBE: 'unsubscribe',\n  ERROR: 'error'\n};\n\n// The event we get back from LiveQuery server\nvar OP_EVENTS = {\n  CONNECTED: 'connected',\n  SUBSCRIBED: 'subscribed',\n  UNSUBSCRIBED: 'unsubscribed',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\n\n// The event the LiveQuery client should emit\nvar CLIENT_EMMITER_TYPES = {\n  CLOSE: 'close',\n  ERROR: 'error',\n  OPEN: 'open'\n};\n\n// The event the LiveQuery subscription should emit\nvar SUBSCRIPTION_EMMITER_TYPES = {\n  OPEN: 'open',\n  CLOSE: 'close',\n  ERROR: 'error',\n  CREATE: 'create',\n  UPDATE: 'update',\n  ENTER: 'enter',\n  LEAVE: 'leave',\n  DELETE: 'delete'\n};\nvar generateInterval = function (k) {\n  return Math.random() * Math.min(30, Math.pow(2, k) - 1) * 1000;\n};\n\n/**\n * Creates a new LiveQueryClient.\n * Extends events.EventEmitter\n * <a href=\"https://nodejs.org/api/events.html#events_class_eventemitter\">cloud functions</a>.\n *\n * A wrapper of a standard WebSocket client. We add several useful methods to\n * help you connect/disconnect to LiveQueryServer, subscribe/unsubscribe a ParseQuery easily.\n *\n * javascriptKey and masterKey are used for verifying the LiveQueryClient when it tries\n * to connect to the LiveQuery server\n *\n * We expose three events to help you monitor the status of the LiveQueryClient.\n *\n * <pre>\n * let Parse = require('parse/node');\n * let LiveQueryClient = Parse.LiveQueryClient;\n * let client = new LiveQueryClient({\n *   applicationId: '',\n *   serverURL: '',\n *   javascriptKey: '',\n *   masterKey: ''\n *  });\n * </pre>\n *\n * Open - When we establish the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('open', () => {\n *\n * });</pre>\n *\n * Close - When we lose the WebSocket connection to the LiveQuery server, you'll get this event.\n * <pre>\n * client.on('close', () => {\n *\n * });</pre>\n *\n * Error - When some network error or LiveQuery server error happens, you'll get this event.\n * <pre>\n * client.on('error', (error) => {\n *\n * });</pre>\n *\n * @alias Parse.LiveQueryClient\n */\nvar LiveQueryClient = /*#__PURE__*/function (_EventEmitter) {\n  (0, _inherits2.default)(LiveQueryClient, _EventEmitter);\n  var _super = _createSuper(LiveQueryClient);\n  /**\n   * @param {object} options\n   * @param {string} options.applicationId - applicationId of your Parse app\n   * @param {string} options.serverURL - <b>the URL of your LiveQuery server</b>\n   * @param {string} options.javascriptKey (optional)\n   * @param {string} options.masterKey (optional) Your Parse Master Key. (Node.js only!)\n   * @param {string} options.sessionToken (optional)\n   * @param {string} options.installationId (optional)\n   */\n  function LiveQueryClient(_ref) {\n    var _this;\n    var applicationId = _ref.applicationId,\n      serverURL = _ref.serverURL,\n      javascriptKey = _ref.javascriptKey,\n      masterKey = _ref.masterKey,\n      sessionToken = _ref.sessionToken,\n      installationId = _ref.installationId;\n    (0, _classCallCheck2.default)(this, LiveQueryClient);\n    _this = _super.call(this);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"attempts\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"id\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"requestId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"applicationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"serverURL\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"javascriptKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"masterKey\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"sessionToken\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"installationId\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"additionalProperties\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"connectPromise\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"subscriptions\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"socket\", void 0);\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"state\", void 0);\n    if (!serverURL || (0, _indexOf.default)(serverURL).call(serverURL, 'ws') !== 0) {\n      throw new Error('You need to set a proper Parse LiveQuery server url before using LiveQueryClient');\n    }\n    _this.reconnectHandle = null;\n    _this.attempts = 1;\n    _this.id = 0;\n    _this.requestId = 1;\n    _this.serverURL = serverURL;\n    _this.applicationId = applicationId;\n    _this.javascriptKey = javascriptKey || undefined;\n    _this.masterKey = masterKey || undefined;\n    _this.sessionToken = sessionToken || undefined;\n    _this.installationId = installationId || undefined;\n    _this.additionalProperties = true;\n    _this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n    _this.subscriptions = new _map.default();\n    _this.state = CLIENT_STATE.INITIALIZED;\n\n    // adding listener so process does not crash\n    // best practice is for developer to register their own listener\n    _this.on('error', function () {});\n    return _this;\n  }\n  (0, _createClass2.default)(LiveQueryClient, [{\n    key: \"shouldOpen\",\n    value: function () /*: any*/{\n      return this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED;\n    }\n\n    /**\n     * Subscribes to a ParseQuery\n     *\n     * If you provide the sessionToken, when the LiveQuery server gets ParseObject's\n     * updates from parse server, it'll try to check whether the sessionToken fulfills\n     * the ParseObject's ACL. The LiveQuery server will only send updates to clients whose\n     * sessionToken is fit for the ParseObject's ACL. You can check the LiveQuery protocol\n     * <a href=\"https://github.com/parse-community/parse-server/wiki/Parse-LiveQuery-Protocol-Specification\">here</a> for more details. The subscription you get is the same subscription you get\n     * from our Standard API.\n     *\n     * @param {object} query - the ParseQuery you want to subscribe to\n     * @param {string} sessionToken (optional)\n     * @returns {LiveQuerySubscription | undefined}\n     */\n  }, {\n    key: \"subscribe\",\n    value: function (query /*: Object*/, sessionToken /*: ?string*/) /*: LiveQuerySubscription*/{\n      var _queryJSON$keys,\n        _queryJSON$watch,\n        _this2 = this;\n      if (!query) {\n        return;\n      }\n      var className = query.className;\n      var queryJSON = query.toJSON();\n      var where = queryJSON.where;\n      var fields = (_queryJSON$keys = (0, _keys.default)(queryJSON)) === null || _queryJSON$keys === void 0 ? void 0 : _queryJSON$keys.split(',');\n      var watch = (_queryJSON$watch = queryJSON.watch) === null || _queryJSON$watch === void 0 ? void 0 : _queryJSON$watch.split(',');\n      var subscribeRequest = {\n        op: OP_TYPES.SUBSCRIBE,\n        requestId: this.requestId,\n        query: {\n          className: className,\n          where: where,\n          fields: fields,\n          watch: watch\n        }\n      };\n      if (sessionToken) {\n        subscribeRequest.sessionToken = sessionToken;\n      }\n      var subscription = new _LiveQuerySubscription.default(this.requestId, query, sessionToken);\n      this.subscriptions.set(this.requestId, subscription);\n      this.requestId += 1;\n      this.connectPromise.then(function () {\n        _this2.socket.send((0, _stringify.default)(subscribeRequest));\n      }).catch(function (error) {\n        subscription.subscribePromise.reject(error);\n      });\n      return subscription;\n    }\n\n    /**\n     * After calling unsubscribe you'll stop receiving events from the subscription object.\n     *\n     * @param {object} subscription - subscription you would like to unsubscribe from.\n     * @returns {Promise | undefined}\n     */\n  }, {\n    key: \"unsubscribe\",\n    value: function (subscription /*: Object*/) /*: ?Promise*/{\n      var _this3 = this;\n      if (!subscription) {\n        return;\n      }\n      var unsubscribeRequest = {\n        op: OP_TYPES.UNSUBSCRIBE,\n        requestId: subscription.id\n      };\n      return this.connectPromise.then(function () {\n        return _this3.socket.send((0, _stringify.default)(unsubscribeRequest));\n      }).then(function () {\n        return subscription.unsubscribePromise;\n      });\n    }\n\n    /**\n     * After open is called, the LiveQueryClient will try to send a connect request\n     * to the LiveQuery server.\n     *\n     */\n  }, {\n    key: \"open\",\n    value: function () {\n      var _this4 = this;\n      var WebSocketImplementation = _CoreManager.default.getWebSocketController();\n      if (!WebSocketImplementation) {\n        this.emit(CLIENT_EMMITER_TYPES.ERROR, 'Can not find WebSocket implementation');\n        return;\n      }\n      if (this.state !== CLIENT_STATE.RECONNECTING) {\n        this.state = CLIENT_STATE.CONNECTING;\n      }\n      this.socket = new WebSocketImplementation(this.serverURL);\n      this.socket.closingPromise = (0, _promiseUtils.resolvingPromise)();\n\n      // Bind WebSocket callbacks\n      this.socket.onopen = function () {\n        _this4._handleWebSocketOpen();\n      };\n      this.socket.onmessage = function (event) {\n        _this4._handleWebSocketMessage(event);\n      };\n      this.socket.onclose = function (event) {\n        _this4.socket.closingPromise.resolve(event);\n        _this4._handleWebSocketClose();\n      };\n      this.socket.onerror = function (error) {\n        _this4._handleWebSocketError(error);\n      };\n    }\n  }, {\n    key: \"resubscribe\",\n    value: function () {\n      var _context,\n        _this5 = this;\n      (0, _forEach.default)(_context = this.subscriptions).call(_context, function (subscription, requestId) {\n        var query = subscription.query;\n        var queryJSON = query.toJSON();\n        var where = queryJSON.where;\n        var fields = (0, _keys.default)(queryJSON) ? (0, _keys.default)(queryJSON).split(',') : undefined;\n        var className = query.className;\n        var sessionToken = subscription.sessionToken;\n        var subscribeRequest = {\n          op: OP_TYPES.SUBSCRIBE,\n          requestId: requestId,\n          query: {\n            className: className,\n            where: where,\n            fields: fields\n          }\n        };\n        if (sessionToken) {\n          subscribeRequest.sessionToken = sessionToken;\n        }\n        _this5.connectPromise.then(function () {\n          _this5.socket.send((0, _stringify.default)(subscribeRequest));\n        });\n      });\n    }\n\n    /**\n     * This method will close the WebSocket connection to this LiveQueryClient,\n     * cancel the auto reconnect and unsubscribe all subscriptions based on it.\n     *\n     * @returns {Promise | undefined} CloseEvent {@link https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/close_event}\n     */\n  }, {\n    key: \"close\",\n    value: function () /*: ?Promise*/{\n      var _this$socket, _this$socket2, _context2;\n      if (this.state === CLIENT_STATE.INITIALIZED || this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.DISCONNECTED;\n      (_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.close();\n      // Notify each subscription about the close\n      var _iterator = _createForOfIteratorHelper((0, _values.default)(_context2 = this.subscriptions).call(_context2)),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var subscription = _step.value;\n          subscription.subscribed = false;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this._handleReset();\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n      return (_this$socket2 = this.socket) === null || _this$socket2 === void 0 ? void 0 : _this$socket2.closingPromise;\n    }\n\n    // ensure we start with valid state if connect is called again after close\n  }, {\n    key: \"_handleReset\",\n    value: function () {\n      this.attempts = 1;\n      this.id = 0;\n      this.requestId = 1;\n      this.connectPromise = (0, _promiseUtils.resolvingPromise)();\n      this.subscriptions = new _map.default();\n    }\n  }, {\n    key: \"_handleWebSocketOpen\",\n    value: function () {\n      this.attempts = 1;\n      var connectRequest = {\n        op: OP_TYPES.CONNECT,\n        applicationId: this.applicationId,\n        javascriptKey: this.javascriptKey,\n        masterKey: this.masterKey,\n        sessionToken: this.sessionToken\n      };\n      if (this.additionalProperties) {\n        connectRequest.installationId = this.installationId;\n      }\n      this.socket.send((0, _stringify.default)(connectRequest));\n    }\n  }, {\n    key: \"_handleWebSocketMessage\",\n    value: function (event /*: any*/) {\n      var data = event.data;\n      if (typeof data === 'string') {\n        data = JSON.parse(data);\n      }\n      var subscription = null;\n      if (data.requestId) {\n        subscription = this.subscriptions.get(data.requestId);\n      }\n      var response = {\n        clientId: data.clientId,\n        installationId: data.installationId\n      };\n      switch (data.op) {\n        case OP_EVENTS.CONNECTED:\n          if (this.state === CLIENT_STATE.RECONNECTING) {\n            this.resubscribe();\n          }\n          this.emit(CLIENT_EMMITER_TYPES.OPEN);\n          this.id = data.clientId;\n          this.connectPromise.resolve();\n          this.state = CLIENT_STATE.CONNECTED;\n          break;\n        case OP_EVENTS.SUBSCRIBED:\n          if (subscription) {\n            subscription.subscribed = true;\n            subscription.subscribePromise.resolve();\n            (0, _setTimeout2.default)(function () {\n              return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.OPEN, response);\n            }, 200);\n          }\n          break;\n        case OP_EVENTS.ERROR:\n          {\n            var parseError = new _ParseError.default(data.code, data.error);\n            if (!this.id) {\n              this.connectPromise.reject(parseError);\n              this.state = CLIENT_STATE.DISCONNECTED;\n            }\n            if (data.requestId) {\n              if (subscription) {\n                subscription.subscribePromise.reject(parseError);\n                (0, _setTimeout2.default)(function () {\n                  return subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, data.error);\n                }, 200);\n              }\n            } else {\n              this.emit(CLIENT_EMMITER_TYPES.ERROR, data.error);\n            }\n            if (data.error === 'Additional properties not allowed') {\n              this.additionalProperties = false;\n            }\n            if (data.reconnect) {\n              this._handleReconnect();\n            }\n            break;\n          }\n        case OP_EVENTS.UNSUBSCRIBED:\n          {\n            if (subscription) {\n              this.subscriptions.delete(data.requestId);\n              subscription.subscribed = false;\n              subscription.unsubscribePromise.resolve();\n            }\n            break;\n          }\n        default:\n          {\n            // create, update, enter, leave, delete cases\n            if (!subscription) {\n              break;\n            }\n            var override = false;\n            if (data.original) {\n              override = true;\n              delete data.original.__type;\n              // Check for removed fields\n              for (var field in data.original) {\n                if (!(field in data.object)) {\n                  data.object[field] = undefined;\n                }\n              }\n              data.original = _ParseObject.default.fromJSON(data.original, false);\n            }\n            delete data.object.__type;\n            var parseObject = _ParseObject.default.fromJSON(data.object, !(subscription.query && subscription.query._select) ? override : false);\n            if (data.original) {\n              subscription.emit(data.op, parseObject, data.original, response);\n            } else {\n              subscription.emit(data.op, parseObject, response);\n            }\n            var localDatastore = _CoreManager.default.getLocalDatastore();\n            if (override && localDatastore.isEnabled) {\n              localDatastore._updateObjectIfPinned(parseObject).then(function () {});\n            }\n          }\n      }\n    }\n  }, {\n    key: \"_handleWebSocketClose\",\n    value: function () {\n      var _context3;\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.CLOSED;\n      this.emit(CLIENT_EMMITER_TYPES.CLOSE);\n      // Notify each subscription about the close\n      var _iterator2 = _createForOfIteratorHelper((0, _values.default)(_context3 = this.subscriptions).call(_context3)),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var subscription = _step2.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.CLOSE);\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleWebSocketError\",\n    value: function (error /*: any*/) {\n      var _context4;\n      this.emit(CLIENT_EMMITER_TYPES.ERROR, error);\n      var _iterator3 = _createForOfIteratorHelper((0, _values.default)(_context4 = this.subscriptions).call(_context4)),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var subscription = _step3.value;\n          subscription.emit(SUBSCRIPTION_EMMITER_TYPES.ERROR, error);\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      this._handleReconnect();\n    }\n  }, {\n    key: \"_handleReconnect\",\n    value: function () {\n      var _context5,\n        _this6 = this;\n      // if closed or currently reconnecting we stop attempting to reconnect\n      if (this.state === CLIENT_STATE.DISCONNECTED) {\n        return;\n      }\n      this.state = CLIENT_STATE.RECONNECTING;\n      var time = generateInterval(this.attempts);\n\n      // handle case when both close/error occur at frequent rates we ensure we do not reconnect unnecessarily.\n      // we're unable to distinguish different between close/error when we're unable to reconnect therefore\n      // we try to reconnect in both cases\n      // server side ws and browser WebSocket behave differently in when close/error get triggered\n\n      if (this.reconnectHandle) {\n        clearTimeout(this.reconnectHandle);\n      }\n      this.reconnectHandle = (0, _setTimeout2.default)((0, _bind.default)(_context5 = function () {\n        _this6.attempts++;\n        _this6.connectPromise = (0, _promiseUtils.resolvingPromise)();\n        _this6.open();\n      }).call(_context5, this), time);\n    }\n  }]);\n  return LiveQueryClient;\n}(_EventEmitter2.default);\n_CoreManager.default.setWebSocketController(typeof WebSocket === 'function' || (typeof WebSocket === \"undefined\" ? \"undefined\" : (0, _typeof2.default)(WebSocket)) === 'object' ? WebSocket : null);\nvar _default = LiveQueryClient;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,yDAAyD,CAAC;AAC3F,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,sDAAsD,CAAC;AAC5F,IAAIE,WAAW,GAAGF,OAAO,CAAC,kDAAkD,CAAC;AAC7E,IAAIG,OAAO,GAAGH,OAAO,CAAC,8CAA8C,CAAC;AACrE,IAAII,kBAAkB,GAAGJ,OAAO,CAAC,oDAAoD,CAAC;AACtF,IAAIK,cAAc,GAAGL,OAAO,CAAC,sDAAsD,CAAC;AACpF,IAAIM,sBAAsB,GAAGN,OAAO,CAAC,8DAA8D,CAAC;AACpG,IAAIO,sBAAsB,GAAGP,OAAO,CAAC,sDAAsD,CAAC;AAC5FM,sBAAsB,CAACE,OAAO,EAAE,YAAY,EAAE;EAC5CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AACxB,IAAIC,QAAQ,GAAGJ,sBAAsB,CAACP,OAAO,CAAC,yDAAyD,CAAC,CAAC;AACzG,IAAIY,IAAI,GAAGL,sBAAsB,CAACP,OAAO,CAAC,2CAA2C,CAAC,CAAC;AACvF,IAAIa,KAAK,GAAGN,sBAAsB,CAACP,OAAO,CAAC,qDAAqD,CAAC,CAAC;AAClG,IAAIc,UAAU,GAAGP,sBAAsB,CAACP,OAAO,CAAC,sDAAsD,CAAC,CAAC;AACxG,IAAIe,QAAQ,GAAGR,sBAAsB,CAACP,OAAO,CAAC,yDAAyD,CAAC,CAAC;AACzG,IAAIgB,OAAO,GAAGT,sBAAsB,CAACP,OAAO,CAAC,uDAAuD,CAAC,CAAC;AACtG,IAAIiB,YAAY,GAAGV,sBAAsB,CAACP,OAAO,CAAC,mDAAmD,CAAC,CAAC;AACvG,IAAIkB,KAAK,GAAGX,sBAAsB,CAACP,OAAO,CAAC,qDAAqD,CAAC,CAAC;AAClG,IAAImB,QAAQ,GAAGZ,sBAAsB,CAACP,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACvF,IAAIoB,gBAAgB,GAAGb,sBAAsB,CAACP,OAAO,CAAC,+CAA+C,CAAC,CAAC;AACvG,IAAIqB,aAAa,GAAGd,sBAAsB,CAACP,OAAO,CAAC,4CAA4C,CAAC,CAAC;AACjG,IAAIsB,uBAAuB,GAAGf,sBAAsB,CAACP,OAAO,CAAC,sDAAsD,CAAC,CAAC;AACrH,IAAIuB,UAAU,GAAGhB,sBAAsB,CAACP,OAAO,CAAC,yCAAyC,CAAC,CAAC;AAC3F,IAAIwB,2BAA2B,GAAGjB,sBAAsB,CAACP,OAAO,CAAC,0DAA0D,CAAC,CAAC;AAC7H,IAAIyB,gBAAgB,GAAGlB,sBAAsB,CAACP,OAAO,CAAC,+CAA+C,CAAC,CAAC;AACvG,IAAI0B,gBAAgB,GAAGnB,sBAAsB,CAACP,OAAO,CAAC,+CAA+C,CAAC,CAAC;AACvG,IAAI2B,YAAY,GAAGpB,sBAAsB,CAACP,OAAO,CAAC,eAAe,CAAC,CAAC;AACnE,IAAI4B,cAAc,GAAGrB,sBAAsB,CAACP,OAAO,CAAC,gBAAgB,CAAC,CAAC;AACtE,IAAI6B,YAAY,GAAGtB,sBAAsB,CAACP,OAAO,CAAC,eAAe,CAAC,CAAC;AACnE,IAAI8B,sBAAsB,GAAGvB,sBAAsB,CAACP,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACvF,IAAI+B,aAAa,GAAG/B,OAAO,CAAC,gBAAgB,CAAC;AAC7C,IAAIgC,WAAW,GAAGzB,sBAAsB,CAACP,OAAO,CAAC,cAAc,CAAC,CAAC;AACjE,SAASiC,0BAA0BA,CAACC,CAAC,EAAEC,cAAc,EAAE;EACrD,IAAIC,EAAE,GAAG,OAAOjC,OAAO,KAAK,WAAW,IAAIC,kBAAkB,CAAC8B,CAAC,CAAC,IAAIA,CAAC,CAAC,YAAY,CAAC;EACnF,IAAI,CAACE,EAAE,EAAE;IACP,IAAI/B,cAAc,CAAC6B,CAAC,CAAC,KAAKE,EAAE,GAAGC,2BAA2B,CAACH,CAAC,CAAC,CAAC,IAAIC,cAAc,IAAID,CAAC,IAAI,OAAOA,CAAC,CAACI,MAAM,KAAK,QAAQ,EAAE;MACrH,IAAIF,EAAE,EAAEF,CAAC,GAAGE,EAAE;MACd,IAAIG,CAAC,GAAG,CAAC;MACT,IAAIC,CAAC,GAAG,SAAAA,CAAA,EAAY,CAAC,CAAC;MACtB,OAAO;QACLC,CAAC,EAAED,CAAC;QACJE,CAAC,EAAE,SAAAA,CAAA,EAAY;UACb,IAAIH,CAAC,IAAIL,CAAC,CAACI,MAAM,EAAE,OAAO;YACxBK,IAAI,EAAE;UACR,CAAC;UACD,OAAO;YACLA,IAAI,EAAE,KAAK;YACXlC,KAAK,EAAEyB,CAAC,CAACK,CAAC,EAAE;UACd,CAAC;QACH,CAAC;QACDK,CAAC,EAAE,SAAAA,CAAUC,EAAE,EAAE;UACf,MAAMA,EAAE;QACV,CAAC;QACDC,CAAC,EAAEN;MACL,CAAC;IACH;IACA,MAAM,IAAIO,SAAS,CAAC,uIAAuI,CAAC;EAC9J;EACA,IAAIC,gBAAgB,GAAG,IAAI;IACzBC,MAAM,GAAG,KAAK;IACdC,GAAG;EACL,OAAO;IACLT,CAAC,EAAE,SAAAA,CAAA,EAAY;MACbL,EAAE,GAAGA,EAAE,CAACe,IAAI,CAACjB,CAAC,CAAC;IACjB,CAAC;IACDQ,CAAC,EAAE,SAAAA,CAAA,EAAY;MACb,IAAIU,IAAI,GAAGhB,EAAE,CAACiB,IAAI,CAAC,CAAC;MACpBL,gBAAgB,GAAGI,IAAI,CAACT,IAAI;MAC5B,OAAOS,IAAI;IACb,CAAC;IACDR,CAAC,EAAE,SAAAA,CAAUU,GAAG,EAAE;MAChBL,MAAM,GAAG,IAAI;MACbC,GAAG,GAAGI,GAAG;IACX,CAAC;IACDR,CAAC,EAAE,SAAAA,CAAA,EAAY;MACb,IAAI;QACF,IAAI,CAACE,gBAAgB,IAAIZ,EAAE,CAACmB,MAAM,IAAI,IAAI,EAAEnB,EAAE,CAACmB,MAAM,CAAC,CAAC;MACzD,CAAC,SAAS;QACR,IAAIN,MAAM,EAAE,MAAMC,GAAG;MACvB;IACF;EACF,CAAC;AACH;AACA,SAASb,2BAA2BA,CAACH,CAAC,EAAEsB,MAAM,EAAE;EAC9C,IAAIC,SAAS;EACb,IAAI,CAACvB,CAAC,EAAE;EACR,IAAI,OAAOA,CAAC,KAAK,QAAQ,EAAE,OAAOwB,iBAAiB,CAACxB,CAAC,EAAEsB,MAAM,CAAC;EAC9D,IAAId,CAAC,GAAGzC,sBAAsB,CAACwD,SAAS,GAAGE,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACV,IAAI,CAACjB,CAAC,CAAC,CAAC,CAACiB,IAAI,CAACM,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpG,IAAIf,CAAC,KAAK,QAAQ,IAAIR,CAAC,CAAC4B,WAAW,EAAEpB,CAAC,GAAGR,CAAC,CAAC4B,WAAW,CAACC,IAAI;EAC3D,IAAIrB,CAAC,KAAK,KAAK,IAAIA,CAAC,KAAK,KAAK,EAAE,OAAOxC,WAAW,CAACgC,CAAC,CAAC;EACrD,IAAIQ,CAAC,KAAK,WAAW,IAAI,0CAA0C,CAACsB,IAAI,CAACtB,CAAC,CAAC,EAAE,OAAOgB,iBAAiB,CAACxB,CAAC,EAAEsB,MAAM,CAAC;AAClH;AACA,SAASE,iBAAiBA,CAACO,GAAG,EAAEC,GAAG,EAAE;EACnC,IAAIA,GAAG,IAAI,IAAI,IAAIA,GAAG,GAAGD,GAAG,CAAC3B,MAAM,EAAE4B,GAAG,GAAGD,GAAG,CAAC3B,MAAM;EACrD,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAE4B,IAAI,GAAG,IAAIC,KAAK,CAACF,GAAG,CAAC,EAAE3B,CAAC,GAAG2B,GAAG,EAAE3B,CAAC,EAAE,EAAE4B,IAAI,CAAC5B,CAAC,CAAC,GAAG0B,GAAG,CAAC1B,CAAC,CAAC;EACrE,OAAO4B,IAAI;AACb;AACA,SAASE,YAAYA,CAACC,OAAO,EAAE;EAC7B,IAAIC,yBAAyB,GAAGC,yBAAyB,CAAC,CAAC;EAC3D,OAAO,YAAY;IACjB,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAEhD,gBAAgB,CAACf,OAAO,EAAE4D,OAAO,CAAC;MAChDI,MAAM;IACR,IAAIH,yBAAyB,EAAE;MAC7B,IAAII,SAAS,GAAG,CAAC,CAAC,EAAElD,gBAAgB,CAACf,OAAO,EAAE,IAAI,CAAC,CAACoD,WAAW;MAC/DY,MAAM,GAAG3E,kBAAkB,CAAC0E,KAAK,EAAEG,SAAS,EAAED,SAAS,CAAC;IAC1D,CAAC,MAAM;MACLD,MAAM,GAAGD,KAAK,CAACI,KAAK,CAAC,IAAI,EAAED,SAAS,CAAC;IACvC;IACA,OAAO,CAAC,CAAC,EAAEpD,2BAA2B,CAACd,OAAO,EAAE,IAAI,EAAEgE,MAAM,CAAC;EAC/D,CAAC;AACH;AACA,SAASF,yBAAyBA,CAAA,EAAG;EACnC,IAAI,OAAOM,OAAO,KAAK,WAAW,IAAI,CAAC/E,kBAAkB,EAAE,OAAO,KAAK;EACvE,IAAIA,kBAAkB,CAACgF,IAAI,EAAE,OAAO,KAAK;EACzC,IAAI,OAAOC,KAAK,KAAK,UAAU,EAAE,OAAO,IAAI;EAC5C,IAAI;IACFC,OAAO,CAACrB,SAAS,CAACsB,OAAO,CAAC/B,IAAI,CAACpD,kBAAkB,CAACkF,OAAO,EAAE,EAAE,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC;IAC/E,OAAO,IAAI;EACb,CAAC,CAAC,OAAOrC,CAAC,EAAE;IACV,OAAO,KAAK;EACd;AACF,CAAC,CAAC;AACF;AACA,IAAIuC,YAAY,GAAG;EACjBC,WAAW,EAAE,aAAa;EAC1BC,UAAU,EAAE,YAAY;EACxBC,SAAS,EAAE,WAAW;EACtBC,MAAM,EAAE,QAAQ;EAChBC,YAAY,EAAE,cAAc;EAC5BC,YAAY,EAAE;AAChB,CAAC;;AAED;AACA,IAAIC,QAAQ,GAAG;EACbC,OAAO,EAAE,SAAS;EAClBC,SAAS,EAAE,WAAW;EACtBC,WAAW,EAAE,aAAa;EAC1BC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,IAAIC,SAAS,GAAG;EACdT,SAAS,EAAE,WAAW;EACtBU,UAAU,EAAE,YAAY;EACxBC,YAAY,EAAE,cAAc;EAC5BH,KAAK,EAAE,OAAO;EACdI,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,IAAIC,oBAAoB,GAAG;EACzBC,KAAK,EAAE,OAAO;EACdV,KAAK,EAAE,OAAO;EACdW,IAAI,EAAE;AACR,CAAC;;AAED;AACA,IAAIC,0BAA0B,GAAG;EAC/BD,IAAI,EAAE,MAAM;EACZD,KAAK,EAAE,OAAO;EACdV,KAAK,EAAE,OAAO;EACdI,MAAM,EAAE,QAAQ;EAChBC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,MAAM,EAAE;AACV,CAAC;AACD,IAAIK,gBAAgB,GAAG,SAAAA,CAAUC,CAAC,EAAE;EAClC,OAAOC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGD,IAAI,CAACE,GAAG,CAAC,EAAE,EAAEF,IAAI,CAACG,GAAG,CAAC,CAAC,EAAEJ,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;AAChE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIK,eAAe,GAAG,aAAa,UAAUC,aAAa,EAAE;EAC1D,CAAC,CAAC,EAAE3F,UAAU,CAACb,OAAO,EAAEuG,eAAe,EAAEC,aAAa,CAAC;EACvD,IAAIC,MAAM,GAAG9C,YAAY,CAAC4C,eAAe,CAAC;EAC1C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,SAASA,eAAeA,CAACG,IAAI,EAAE;IAC7B,IAAIC,KAAK;IACT,IAAIC,aAAa,GAAGF,IAAI,CAACE,aAAa;MACpCC,SAAS,GAAGH,IAAI,CAACG,SAAS;MAC1BC,aAAa,GAAGJ,IAAI,CAACI,aAAa;MAClCC,SAAS,GAAGL,IAAI,CAACK,SAAS;MAC1BC,YAAY,GAAGN,IAAI,CAACM,YAAY;MAChCC,cAAc,GAAGP,IAAI,CAACO,cAAc;IACtC,CAAC,CAAC,EAAEvG,gBAAgB,CAACV,OAAO,EAAE,IAAI,EAAEuG,eAAe,CAAC;IACpDI,KAAK,GAAGF,MAAM,CAAChE,IAAI,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,EAAEzB,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;IAC9F,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACxF,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAC/F,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IACnG,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAC/F,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IACnG,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;IAC/F,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,cAAc,EAAE,KAAK,CAAC,CAAC;IAClG,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACpG,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,sBAAsB,EAAE,KAAK,CAAC,CAAC;IAC1G,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,gBAAgB,EAAE,KAAK,CAAC,CAAC;IACpG,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,eAAe,EAAE,KAAK,CAAC,CAAC;IACnG,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC5F,CAAC,CAAC,EAAE3F,gBAAgB,CAAChB,OAAO,EAAE,CAAC,CAAC,EAAEY,uBAAuB,CAACZ,OAAO,EAAE2G,KAAK,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,CAAC;IAC3F,IAAI,CAACE,SAAS,IAAI,CAAC,CAAC,EAAE5G,QAAQ,CAACD,OAAO,EAAE6G,SAAS,CAAC,CAACpE,IAAI,CAACoE,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE;MAC9E,MAAM,IAAIK,KAAK,CAAC,kFAAkF,CAAC;IACrG;IACAP,KAAK,CAACQ,eAAe,GAAG,IAAI;IAC5BR,KAAK,CAACS,QAAQ,GAAG,CAAC;IAClBT,KAAK,CAACU,EAAE,GAAG,CAAC;IACZV,KAAK,CAACW,SAAS,GAAG,CAAC;IACnBX,KAAK,CAACE,SAAS,GAAGA,SAAS;IAC3BF,KAAK,CAACC,aAAa,GAAGA,aAAa;IACnCD,KAAK,CAACG,aAAa,GAAGA,aAAa,IAAIS,SAAS;IAChDZ,KAAK,CAACI,SAAS,GAAGA,SAAS,IAAIQ,SAAS;IACxCZ,KAAK,CAACK,YAAY,GAAGA,YAAY,IAAIO,SAAS;IAC9CZ,KAAK,CAACM,cAAc,GAAGA,cAAc,IAAIM,SAAS;IAClDZ,KAAK,CAACa,oBAAoB,GAAG,IAAI;IACjCb,KAAK,CAACc,cAAc,GAAG,CAAC,CAAC,EAAEpG,aAAa,CAACqG,gBAAgB,EAAE,CAAC;IAC5Df,KAAK,CAACgB,aAAa,GAAG,IAAIzH,IAAI,CAACF,OAAO,CAAC,CAAC;IACxC2G,KAAK,CAACiB,KAAK,GAAGnD,YAAY,CAACC,WAAW;;IAEtC;IACA;IACAiC,KAAK,CAACkB,EAAE,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;IACjC,OAAOlB,KAAK;EACd;EACA,CAAC,CAAC,EAAEhG,aAAa,CAACX,OAAO,EAAEuG,eAAe,EAAE,CAAC;IAC3CuB,GAAG,EAAE,YAAY;IACjB/H,KAAK,EAAE,SAAAA,CAAA,EAAY,SAAS;MAC1B,OAAO,IAAI,CAAC6H,KAAK,KAAKnD,YAAY,CAACC,WAAW,IAAI,IAAI,CAACkD,KAAK,KAAKnD,YAAY,CAACM,YAAY;IAC5F;;IAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACD+C,GAAG,EAAE,WAAW;IAChB/H,KAAK,EAAE,SAAAA,CAAUgI,KAAK,CAAC,cAAcf,YAAY,CAAC,eAAe,2BAA2B;MAC1F,IAAIgB,eAAe;QACjBC,gBAAgB;QAChBC,MAAM,GAAG,IAAI;MACf,IAAI,CAACH,KAAK,EAAE;QACV;MACF;MACA,IAAII,SAAS,GAAGJ,KAAK,CAACI,SAAS;MAC/B,IAAIC,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC;MAC9B,IAAIC,KAAK,GAAGF,SAAS,CAACE,KAAK;MAC3B,IAAIC,MAAM,GAAG,CAACP,eAAe,GAAG,CAAC,CAAC,EAAE7H,KAAK,CAACH,OAAO,EAAEoI,SAAS,CAAC,MAAM,IAAI,IAAIJ,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACQ,KAAK,CAAC,GAAG,CAAC;MAC3I,IAAIC,KAAK,GAAG,CAACR,gBAAgB,GAAGG,SAAS,CAACK,KAAK,MAAM,IAAI,IAAIR,gBAAgB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,gBAAgB,CAACO,KAAK,CAAC,GAAG,CAAC;MAC/H,IAAIE,gBAAgB,GAAG;QACrBC,EAAE,EAAE3D,QAAQ,CAACE,SAAS;QACtBoC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBS,KAAK,EAAE;UACLI,SAAS,EAAEA,SAAS;UACpBG,KAAK,EAAEA,KAAK;UACZC,MAAM,EAAEA,MAAM;UACdE,KAAK,EAAEA;QACT;MACF,CAAC;MACD,IAAIzB,YAAY,EAAE;QAChB0B,gBAAgB,CAAC1B,YAAY,GAAGA,YAAY;MAC9C;MACA,IAAI4B,YAAY,GAAG,IAAIxH,sBAAsB,CAACpB,OAAO,CAAC,IAAI,CAACsH,SAAS,EAAES,KAAK,EAAEf,YAAY,CAAC;MAC1F,IAAI,CAACW,aAAa,CAACkB,GAAG,CAAC,IAAI,CAACvB,SAAS,EAAEsB,YAAY,CAAC;MACpD,IAAI,CAACtB,SAAS,IAAI,CAAC;MACnB,IAAI,CAACG,cAAc,CAACqB,IAAI,CAAC,YAAY;QACnCZ,MAAM,CAACa,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE5I,UAAU,CAACJ,OAAO,EAAE0I,gBAAgB,CAAC,CAAC;MAC/D,CAAC,CAAC,CAACO,KAAK,CAAC,UAAUC,KAAK,EAAE;QACxBN,YAAY,CAACO,gBAAgB,CAACC,MAAM,CAACF,KAAK,CAAC;MAC7C,CAAC,CAAC;MACF,OAAON,YAAY;IACrB;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDd,GAAG,EAAE,aAAa;IAClB/H,KAAK,EAAE,SAAAA,CAAU6I,YAAY,CAAC,cAAc,cAAc;MACxD,IAAIS,MAAM,GAAG,IAAI;MACjB,IAAI,CAACT,YAAY,EAAE;QACjB;MACF;MACA,IAAIU,kBAAkB,GAAG;QACvBX,EAAE,EAAE3D,QAAQ,CAACG,WAAW;QACxBmC,SAAS,EAAEsB,YAAY,CAACvB;MAC1B,CAAC;MACD,OAAO,IAAI,CAACI,cAAc,CAACqB,IAAI,CAAC,YAAY;QAC1C,OAAOO,MAAM,CAACN,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE5I,UAAU,CAACJ,OAAO,EAAEsJ,kBAAkB,CAAC,CAAC;MACxE,CAAC,CAAC,CAACR,IAAI,CAAC,YAAY;QAClB,OAAOF,YAAY,CAACW,kBAAkB;MACxC,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDzB,GAAG,EAAE,MAAM;IACX/H,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjB,IAAIyJ,MAAM,GAAG,IAAI;MACjB,IAAIC,uBAAuB,GAAGxI,YAAY,CAACjB,OAAO,CAAC0J,sBAAsB,CAAC,CAAC;MAC3E,IAAI,CAACD,uBAAuB,EAAE;QAC5B,IAAI,CAACE,IAAI,CAAC9D,oBAAoB,CAACT,KAAK,EAAE,uCAAuC,CAAC;QAC9E;MACF;MACA,IAAI,IAAI,CAACwC,KAAK,KAAKnD,YAAY,CAACK,YAAY,EAAE;QAC5C,IAAI,CAAC8C,KAAK,GAAGnD,YAAY,CAACE,UAAU;MACtC;MACA,IAAI,CAACoE,MAAM,GAAG,IAAIU,uBAAuB,CAAC,IAAI,CAAC5C,SAAS,CAAC;MACzD,IAAI,CAACkC,MAAM,CAACa,cAAc,GAAG,CAAC,CAAC,EAAEvI,aAAa,CAACqG,gBAAgB,EAAE,CAAC;;MAElE;MACA,IAAI,CAACqB,MAAM,CAACc,MAAM,GAAG,YAAY;QAC/BL,MAAM,CAACM,oBAAoB,CAAC,CAAC;MAC/B,CAAC;MACD,IAAI,CAACf,MAAM,CAACgB,SAAS,GAAG,UAAUC,KAAK,EAAE;QACvCR,MAAM,CAACS,uBAAuB,CAACD,KAAK,CAAC;MACvC,CAAC;MACD,IAAI,CAACjB,MAAM,CAACmB,OAAO,GAAG,UAAUF,KAAK,EAAE;QACrCR,MAAM,CAACT,MAAM,CAACa,cAAc,CAACO,OAAO,CAACH,KAAK,CAAC;QAC3CR,MAAM,CAACY,qBAAqB,CAAC,CAAC;MAChC,CAAC;MACD,IAAI,CAACrB,MAAM,CAACsB,OAAO,GAAG,UAAUnB,KAAK,EAAE;QACrCM,MAAM,CAACc,qBAAqB,CAACpB,KAAK,CAAC;MACrC,CAAC;IACH;EACF,CAAC,EAAE;IACDpB,GAAG,EAAE,aAAa;IAClB/H,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjB,IAAIwK,QAAQ;QACVC,MAAM,GAAG,IAAI;MACf,CAAC,CAAC,EAAEnK,QAAQ,CAACL,OAAO,EAAEuK,QAAQ,GAAG,IAAI,CAAC5C,aAAa,CAAC,CAAClF,IAAI,CAAC8H,QAAQ,EAAE,UAAU3B,YAAY,EAAEtB,SAAS,EAAE;QACrG,IAAIS,KAAK,GAAGa,YAAY,CAACb,KAAK;QAC9B,IAAIK,SAAS,GAAGL,KAAK,CAACM,MAAM,CAAC,CAAC;QAC9B,IAAIC,KAAK,GAAGF,SAAS,CAACE,KAAK;QAC3B,IAAIC,MAAM,GAAG,CAAC,CAAC,EAAEpI,KAAK,CAACH,OAAO,EAAEoI,SAAS,CAAC,GAAG,CAAC,CAAC,EAAEjI,KAAK,CAACH,OAAO,EAAEoI,SAAS,CAAC,CAACI,KAAK,CAAC,GAAG,CAAC,GAAGjB,SAAS;QACjG,IAAIY,SAAS,GAAGJ,KAAK,CAACI,SAAS;QAC/B,IAAInB,YAAY,GAAG4B,YAAY,CAAC5B,YAAY;QAC5C,IAAI0B,gBAAgB,GAAG;UACrBC,EAAE,EAAE3D,QAAQ,CAACE,SAAS;UACtBoC,SAAS,EAAEA,SAAS;UACpBS,KAAK,EAAE;YACLI,SAAS,EAAEA,SAAS;YACpBG,KAAK,EAAEA,KAAK;YACZC,MAAM,EAAEA;UACV;QACF,CAAC;QACD,IAAIvB,YAAY,EAAE;UAChB0B,gBAAgB,CAAC1B,YAAY,GAAGA,YAAY;QAC9C;QACAwD,MAAM,CAAC/C,cAAc,CAACqB,IAAI,CAAC,YAAY;UACrC0B,MAAM,CAACzB,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE5I,UAAU,CAACJ,OAAO,EAAE0I,gBAAgB,CAAC,CAAC;QAC/D,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;;IAEA;AACJ;AACA;AACA;AACA;AACA;EACE,CAAC,EAAE;IACDZ,GAAG,EAAE,OAAO;IACZ/H,KAAK,EAAE,SAAAA,CAAA,EAAY,cAAc;MAC/B,IAAI0K,YAAY,EAAEC,aAAa,EAAEC,SAAS;MAC1C,IAAI,IAAI,CAAC/C,KAAK,KAAKnD,YAAY,CAACC,WAAW,IAAI,IAAI,CAACkD,KAAK,KAAKnD,YAAY,CAACM,YAAY,EAAE;QACvF;MACF;MACA,IAAI,CAAC6C,KAAK,GAAGnD,YAAY,CAACM,YAAY;MACtC,CAAC0F,YAAY,GAAG,IAAI,CAAC1B,MAAM,MAAM,IAAI,IAAI0B,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACG,KAAK,CAAC,CAAC;MAChG;MACA,IAAIC,SAAS,GAAGtJ,0BAA0B,CAAC,CAAC,CAAC,EAAEjB,OAAO,CAACN,OAAO,EAAE2K,SAAS,GAAG,IAAI,CAAChD,aAAa,CAAC,CAAClF,IAAI,CAACkI,SAAS,CAAC,CAAC;QAC9GG,KAAK;MACP,IAAI;QACF,KAAKD,SAAS,CAAC9I,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC+I,KAAK,GAAGD,SAAS,CAAC7I,CAAC,CAAC,CAAC,EAAEC,IAAI,GAAG;UAClD,IAAI2G,YAAY,GAAGkC,KAAK,CAAC/K,KAAK;UAC9B6I,YAAY,CAACmC,UAAU,GAAG,KAAK;UAC/BnC,YAAY,CAACe,IAAI,CAAC3D,0BAA0B,CAACF,KAAK,CAAC;QACrD;MACF,CAAC,CAAC,OAAOtD,GAAG,EAAE;QACZqI,SAAS,CAAC3I,CAAC,CAACM,GAAG,CAAC;MAClB,CAAC,SAAS;QACRqI,SAAS,CAACzI,CAAC,CAAC,CAAC;MACf;MACA,IAAI,CAAC4I,YAAY,CAAC,CAAC;MACnB,IAAI,CAACrB,IAAI,CAAC9D,oBAAoB,CAACC,KAAK,CAAC;MACrC,OAAO,CAAC4E,aAAa,GAAG,IAAI,CAAC3B,MAAM,MAAM,IAAI,IAAI2B,aAAa,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACd,cAAc;IACnH;;IAEA;EACF,CAAC,EAAE;IACD9B,GAAG,EAAE,cAAc;IACnB/H,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjB,IAAI,CAACqH,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACC,EAAE,GAAG,CAAC;MACX,IAAI,CAACC,SAAS,GAAG,CAAC;MAClB,IAAI,CAACG,cAAc,GAAG,CAAC,CAAC,EAAEpG,aAAa,CAACqG,gBAAgB,EAAE,CAAC;MAC3D,IAAI,CAACC,aAAa,GAAG,IAAIzH,IAAI,CAACF,OAAO,CAAC,CAAC;IACzC;EACF,CAAC,EAAE;IACD8H,GAAG,EAAE,sBAAsB;IAC3B/H,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjB,IAAI,CAACqH,QAAQ,GAAG,CAAC;MACjB,IAAI6D,cAAc,GAAG;QACnBtC,EAAE,EAAE3D,QAAQ,CAACC,OAAO;QACpB2B,aAAa,EAAE,IAAI,CAACA,aAAa;QACjCE,aAAa,EAAE,IAAI,CAACA,aAAa;QACjCC,SAAS,EAAE,IAAI,CAACA,SAAS;QACzBC,YAAY,EAAE,IAAI,CAACA;MACrB,CAAC;MACD,IAAI,IAAI,CAACQ,oBAAoB,EAAE;QAC7ByD,cAAc,CAAChE,cAAc,GAAG,IAAI,CAACA,cAAc;MACrD;MACA,IAAI,CAAC8B,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE5I,UAAU,CAACJ,OAAO,EAAEiL,cAAc,CAAC,CAAC;IAC3D;EACF,CAAC,EAAE;IACDnD,GAAG,EAAE,yBAAyB;IAC9B/H,KAAK,EAAE,SAAAA,CAAUiK,KAAK,CAAC,WAAW;MAChC,IAAIkB,IAAI,GAAGlB,KAAK,CAACkB,IAAI;MACrB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;QAC5BA,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC;MACzB;MACA,IAAItC,YAAY,GAAG,IAAI;MACvB,IAAIsC,IAAI,CAAC5D,SAAS,EAAE;QAClBsB,YAAY,GAAG,IAAI,CAACjB,aAAa,CAAC0D,GAAG,CAACH,IAAI,CAAC5D,SAAS,CAAC;MACvD;MACA,IAAIgE,QAAQ,GAAG;QACbC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;QACvBtE,cAAc,EAAEiE,IAAI,CAACjE;MACvB,CAAC;MACD,QAAQiE,IAAI,CAACvC,EAAE;QACb,KAAKtD,SAAS,CAACT,SAAS;UACtB,IAAI,IAAI,CAACgD,KAAK,KAAKnD,YAAY,CAACK,YAAY,EAAE;YAC5C,IAAI,CAAC0G,WAAW,CAAC,CAAC;UACpB;UACA,IAAI,CAAC7B,IAAI,CAAC9D,oBAAoB,CAACE,IAAI,CAAC;UACpC,IAAI,CAACsB,EAAE,GAAG6D,IAAI,CAACK,QAAQ;UACvB,IAAI,CAAC9D,cAAc,CAAC0C,OAAO,CAAC,CAAC;UAC7B,IAAI,CAACvC,KAAK,GAAGnD,YAAY,CAACG,SAAS;UACnC;QACF,KAAKS,SAAS,CAACC,UAAU;UACvB,IAAIsD,YAAY,EAAE;YAChBA,YAAY,CAACmC,UAAU,GAAG,IAAI;YAC9BnC,YAAY,CAACO,gBAAgB,CAACgB,OAAO,CAAC,CAAC;YACvC,CAAC,CAAC,EAAE5J,YAAY,CAACP,OAAO,EAAE,YAAY;cACpC,OAAO4I,YAAY,CAACe,IAAI,CAAC3D,0BAA0B,CAACD,IAAI,EAAEuF,QAAQ,CAAC;YACrE,CAAC,EAAE,GAAG,CAAC;UACT;UACA;QACF,KAAKjG,SAAS,CAACD,KAAK;UAClB;YACE,IAAIqG,UAAU,GAAG,IAAInK,WAAW,CAACtB,OAAO,CAACkL,IAAI,CAACQ,IAAI,EAAER,IAAI,CAAChC,KAAK,CAAC;YAC/D,IAAI,CAAC,IAAI,CAAC7B,EAAE,EAAE;cACZ,IAAI,CAACI,cAAc,CAAC2B,MAAM,CAACqC,UAAU,CAAC;cACtC,IAAI,CAAC7D,KAAK,GAAGnD,YAAY,CAACM,YAAY;YACxC;YACA,IAAImG,IAAI,CAAC5D,SAAS,EAAE;cAClB,IAAIsB,YAAY,EAAE;gBAChBA,YAAY,CAACO,gBAAgB,CAACC,MAAM,CAACqC,UAAU,CAAC;gBAChD,CAAC,CAAC,EAAElL,YAAY,CAACP,OAAO,EAAE,YAAY;kBACpC,OAAO4I,YAAY,CAACe,IAAI,CAAC3D,0BAA0B,CAACZ,KAAK,EAAE8F,IAAI,CAAChC,KAAK,CAAC;gBACxE,CAAC,EAAE,GAAG,CAAC;cACT;YACF,CAAC,MAAM;cACL,IAAI,CAACS,IAAI,CAAC9D,oBAAoB,CAACT,KAAK,EAAE8F,IAAI,CAAChC,KAAK,CAAC;YACnD;YACA,IAAIgC,IAAI,CAAChC,KAAK,KAAK,mCAAmC,EAAE;cACtD,IAAI,CAAC1B,oBAAoB,GAAG,KAAK;YACnC;YACA,IAAI0D,IAAI,CAACS,SAAS,EAAE;cAClB,IAAI,CAACC,gBAAgB,CAAC,CAAC;YACzB;YACA;UACF;QACF,KAAKvG,SAAS,CAACE,YAAY;UACzB;YACE,IAAIqD,YAAY,EAAE;cAChB,IAAI,CAACjB,aAAa,CAACkE,MAAM,CAACX,IAAI,CAAC5D,SAAS,CAAC;cACzCsB,YAAY,CAACmC,UAAU,GAAG,KAAK;cAC/BnC,YAAY,CAACW,kBAAkB,CAACY,OAAO,CAAC,CAAC;YAC3C;YACA;UACF;QACF;UACE;YACE;YACA,IAAI,CAACvB,YAAY,EAAE;cACjB;YACF;YACA,IAAIkD,QAAQ,GAAG,KAAK;YACpB,IAAIZ,IAAI,CAACa,QAAQ,EAAE;cACjBD,QAAQ,GAAG,IAAI;cACf,OAAOZ,IAAI,CAACa,QAAQ,CAACC,MAAM;cAC3B;cACA,KAAK,IAAIC,KAAK,IAAIf,IAAI,CAACa,QAAQ,EAAE;gBAC/B,IAAI,EAAEE,KAAK,IAAIf,IAAI,CAACgB,MAAM,CAAC,EAAE;kBAC3BhB,IAAI,CAACgB,MAAM,CAACD,KAAK,CAAC,GAAG1E,SAAS;gBAChC;cACF;cACA2D,IAAI,CAACa,QAAQ,GAAG5K,YAAY,CAACnB,OAAO,CAACmM,QAAQ,CAACjB,IAAI,CAACa,QAAQ,EAAE,KAAK,CAAC;YACrE;YACA,OAAOb,IAAI,CAACgB,MAAM,CAACF,MAAM;YACzB,IAAII,WAAW,GAAGjL,YAAY,CAACnB,OAAO,CAACmM,QAAQ,CAACjB,IAAI,CAACgB,MAAM,EAAE,EAAEtD,YAAY,CAACb,KAAK,IAAIa,YAAY,CAACb,KAAK,CAACsE,OAAO,CAAC,GAAGP,QAAQ,GAAG,KAAK,CAAC;YACpI,IAAIZ,IAAI,CAACa,QAAQ,EAAE;cACjBnD,YAAY,CAACe,IAAI,CAACuB,IAAI,CAACvC,EAAE,EAAEyD,WAAW,EAAElB,IAAI,CAACa,QAAQ,EAAET,QAAQ,CAAC;YAClE,CAAC,MAAM;cACL1C,YAAY,CAACe,IAAI,CAACuB,IAAI,CAACvC,EAAE,EAAEyD,WAAW,EAAEd,QAAQ,CAAC;YACnD;YACA,IAAIgB,cAAc,GAAGrL,YAAY,CAACjB,OAAO,CAACuM,iBAAiB,CAAC,CAAC;YAC7D,IAAIT,QAAQ,IAAIQ,cAAc,CAACE,SAAS,EAAE;cACxCF,cAAc,CAACG,qBAAqB,CAACL,WAAW,CAAC,CAACtD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YACxE;UACF;MACJ;IACF;EACF,CAAC,EAAE;IACDhB,GAAG,EAAE,uBAAuB;IAC5B/H,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjB,IAAI2M,SAAS;MACb,IAAI,IAAI,CAAC9E,KAAK,KAAKnD,YAAY,CAACM,YAAY,EAAE;QAC5C;MACF;MACA,IAAI,CAAC6C,KAAK,GAAGnD,YAAY,CAACI,MAAM;MAChC,IAAI,CAAC8E,IAAI,CAAC9D,oBAAoB,CAACC,KAAK,CAAC;MACrC;MACA,IAAI6G,UAAU,GAAGpL,0BAA0B,CAAC,CAAC,CAAC,EAAEjB,OAAO,CAACN,OAAO,EAAE0M,SAAS,GAAG,IAAI,CAAC/E,aAAa,CAAC,CAAClF,IAAI,CAACiK,SAAS,CAAC,CAAC;QAC/GE,MAAM;MACR,IAAI;QACF,KAAKD,UAAU,CAAC5K,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC6K,MAAM,GAAGD,UAAU,CAAC3K,CAAC,CAAC,CAAC,EAAEC,IAAI,GAAG;UACrD,IAAI2G,YAAY,GAAGgE,MAAM,CAAC7M,KAAK;UAC/B6I,YAAY,CAACe,IAAI,CAAC3D,0BAA0B,CAACF,KAAK,CAAC;QACrD;MACF,CAAC,CAAC,OAAOtD,GAAG,EAAE;QACZmK,UAAU,CAACzK,CAAC,CAACM,GAAG,CAAC;MACnB,CAAC,SAAS;QACRmK,UAAU,CAACvK,CAAC,CAAC,CAAC;MAChB;MACA,IAAI,CAACwJ,gBAAgB,CAAC,CAAC;IACzB;EACF,CAAC,EAAE;IACD9D,GAAG,EAAE,uBAAuB;IAC5B/H,KAAK,EAAE,SAAAA,CAAUmJ,KAAK,CAAC,WAAW;MAChC,IAAI2D,SAAS;MACb,IAAI,CAAClD,IAAI,CAAC9D,oBAAoB,CAACT,KAAK,EAAE8D,KAAK,CAAC;MAC5C,IAAI4D,UAAU,GAAGvL,0BAA0B,CAAC,CAAC,CAAC,EAAEjB,OAAO,CAACN,OAAO,EAAE6M,SAAS,GAAG,IAAI,CAAClF,aAAa,CAAC,CAAClF,IAAI,CAACoK,SAAS,CAAC,CAAC;QAC/GE,MAAM;MACR,IAAI;QACF,KAAKD,UAAU,CAAC/K,CAAC,CAAC,CAAC,EAAE,CAAC,CAACgL,MAAM,GAAGD,UAAU,CAAC9K,CAAC,CAAC,CAAC,EAAEC,IAAI,GAAG;UACrD,IAAI2G,YAAY,GAAGmE,MAAM,CAAChN,KAAK;UAC/B6I,YAAY,CAACe,IAAI,CAAC3D,0BAA0B,CAACZ,KAAK,EAAE8D,KAAK,CAAC;QAC5D;MACF,CAAC,CAAC,OAAO1G,GAAG,EAAE;QACZsK,UAAU,CAAC5K,CAAC,CAACM,GAAG,CAAC;MACnB,CAAC,SAAS;QACRsK,UAAU,CAAC1K,CAAC,CAAC,CAAC;MAChB;MACA,IAAI,CAACwJ,gBAAgB,CAAC,CAAC;IACzB;EACF,CAAC,EAAE;IACD9D,GAAG,EAAE,kBAAkB;IACvB/H,KAAK,EAAE,SAAAA,CAAA,EAAY;MACjB,IAAIiN,SAAS;QACXC,MAAM,GAAG,IAAI;MACf;MACA,IAAI,IAAI,CAACrF,KAAK,KAAKnD,YAAY,CAACM,YAAY,EAAE;QAC5C;MACF;MACA,IAAI,CAAC6C,KAAK,GAAGnD,YAAY,CAACK,YAAY;MACtC,IAAIoI,IAAI,GAAGjH,gBAAgB,CAAC,IAAI,CAACmB,QAAQ,CAAC;;MAE1C;MACA;MACA;MACA;;MAEA,IAAI,IAAI,CAACD,eAAe,EAAE;QACxBgG,YAAY,CAAC,IAAI,CAAChG,eAAe,CAAC;MACpC;MACA,IAAI,CAACA,eAAe,GAAG,CAAC,CAAC,EAAE5G,YAAY,CAACP,OAAO,EAAE,CAAC,CAAC,EAAEQ,KAAK,CAACR,OAAO,EAAEgN,SAAS,GAAG,SAAAA,CAAA,EAAY;QAC1FC,MAAM,CAAC7F,QAAQ,EAAE;QACjB6F,MAAM,CAACxF,cAAc,GAAG,CAAC,CAAC,EAAEpG,aAAa,CAACqG,gBAAgB,EAAE,CAAC;QAC7DuF,MAAM,CAACG,IAAI,CAAC,CAAC;MACf,CAAC,CAAC,CAAC3K,IAAI,CAACuK,SAAS,EAAE,IAAI,CAAC,EAAEE,IAAI,CAAC;IACjC;EACF,CAAC,CAAC,CAAC;EACH,OAAO3G,eAAe;AACxB,CAAC,CAACrF,cAAc,CAAClB,OAAO,CAAC;AACzBiB,YAAY,CAACjB,OAAO,CAACqN,sBAAsB,CAAC,OAAOC,SAAS,KAAK,UAAU,IAAI,CAAC,OAAOA,SAAS,KAAK,WAAW,GAAG,WAAW,GAAG,CAAC,CAAC,EAAE7M,QAAQ,CAACT,OAAO,EAAEsN,SAAS,CAAC,MAAM,QAAQ,GAAGA,SAAS,GAAG,IAAI,CAAC;AACnM,IAAIC,QAAQ,GAAGhH,eAAe;AAC9BzG,OAAO,CAACE,OAAO,GAAGuN,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}