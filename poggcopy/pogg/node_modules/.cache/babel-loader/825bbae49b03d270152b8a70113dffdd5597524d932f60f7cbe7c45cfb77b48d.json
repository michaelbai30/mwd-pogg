{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getJobStatus = getJobStatus;\nexports.getJobsData = getJobsData;\nexports.run = run;\nexports.startJob = startJob;\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _decode = _interopRequireDefault(require(\"./decode\"));\nvar _encode = _interopRequireDefault(require(\"./encode\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n/**\n * @flow\n */\n/*:: import type { RequestOptions } from './RESTController';*/\n/**\n * Contains functions for calling and declaring\n * <a href=\"/docs/cloud_code_guide#functions\">cloud functions</a>.\n * <p><strong><em>\n *   Some functions are only available from Cloud Code.\n * </em></strong></p>\n *\n * @class Parse.Cloud\n * @static\n * @hideconstructor\n */\n/**\n * Makes a call to a cloud function.\n *\n * @function run\n * @name Parse.Cloud.run\n * @param {string} name The function name.\n * @param {object} data The parameters to send to the cloud function.\n * @param {object} options\n * @returns {Promise} A promise that will be resolved with the result\n * of the function.\n */\nfunction run(name /*: string*/, data /*: mixed*/, options /*: RequestOptions*/) /*: Promise<mixed>*/{\n  options = options || {};\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new TypeError('Cloud function name must be a string.');\n  }\n  var requestOptions = {};\n  if (options.useMasterKey) {\n    requestOptions.useMasterKey = options.useMasterKey;\n  }\n  if (options.sessionToken) {\n    requestOptions.sessionToken = options.sessionToken;\n  }\n  if (options.context && (0, _typeof2.default)(options.context) === 'object') {\n    requestOptions.context = options.context;\n  }\n  return _CoreManager.default.getCloudController().run(name, data, requestOptions);\n}\n\n/**\n * Gets data for the current set of cloud jobs.\n *\n * @function getJobsData\n * @name Parse.Cloud.getJobsData\n * @returns {Promise} A promise that will be resolved with the result\n * of the function.\n */\nfunction getJobsData() /*: Promise<Object>*/{\n  return _CoreManager.default.getCloudController().getJobsData({\n    useMasterKey: true\n  });\n}\n\n/**\n * Starts a given cloud job, which will process asynchronously.\n *\n * @function startJob\n * @name Parse.Cloud.startJob\n * @param {string} name The function name.\n * @param {object} data The parameters to send to the cloud function.\n * @returns {Promise} A promise that will be resolved with the jobStatusId\n * of the job.\n */\nfunction startJob(name /*: string*/, data /*: mixed*/) /*: Promise<string>*/{\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new TypeError('Cloud job name must be a string.');\n  }\n  return _CoreManager.default.getCloudController().startJob(name, data, {\n    useMasterKey: true\n  });\n}\n\n/**\n * Gets job status by Id\n *\n * @function getJobStatus\n * @name Parse.Cloud.getJobStatus\n * @param {string} jobStatusId The Id of Job Status.\n * @returns {Parse.Object} Status of Job.\n */\nfunction getJobStatus(jobStatusId /*: string*/) /*: Promise<ParseObject>*/{\n  var query = new _ParseQuery.default('_JobStatus');\n  return query.get(jobStatusId, {\n    useMasterKey: true\n  });\n}\nvar DefaultController = {\n  run: function (name, data, options /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    var payload = (0, _encode.default)(data, true);\n    var request = RESTController.request('POST', 'functions/' + name, payload, options);\n    return request.then(function (res) {\n      if ((0, _typeof2.default)(res) === 'object' && (0, _keys.default)(res).length > 0 && !res.hasOwnProperty('result')) {\n        throw new _ParseError.default(_ParseError.default.INVALID_JSON, 'The server returned an invalid response.');\n      }\n      var decoded = (0, _decode.default)(res);\n      if (decoded && decoded.hasOwnProperty('result')) {\n        return _promise.default.resolve(decoded.result);\n      }\n      return _promise.default.resolve(undefined);\n    });\n  },\n  getJobsData: function (options /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('GET', 'cloud_code/jobs/data', null, options);\n  },\n  startJob: function (name, data, options /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    var payload = (0, _encode.default)(data, true);\n    return RESTController.request('POST', 'jobs/' + name, payload, options);\n  }\n};\n_CoreManager.default.setCloudController(DefaultController);","map":{"version":3,"names":["_Object$defineProperty","require","_interopRequireDefault","exports","value","getJobStatus","getJobsData","run","startJob","_keys","_promise","_typeof2","_CoreManager","_decode","_encode","_ParseError","_ParseQuery","_ParseObject","name","data","options","length","TypeError","requestOptions","useMasterKey","sessionToken","context","default","getCloudController","jobStatusId","query","get","DefaultController","RESTController","getRESTController","payload","request","then","res","hasOwnProperty","INVALID_JSON","decoded","resolve","result","undefined","setCloudController"],"sources":["/home/mspadafo/compsci/MWD/pogg/node_modules/parse/lib/browser/Cloud.js"],"sourcesContent":["\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getJobStatus = getJobStatus;\nexports.getJobsData = getJobsData;\nexports.run = run;\nexports.startJob = startJob;\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nvar _decode = _interopRequireDefault(require(\"./decode\"));\nvar _encode = _interopRequireDefault(require(\"./encode\"));\nvar _ParseError = _interopRequireDefault(require(\"./ParseError\"));\nvar _ParseQuery = _interopRequireDefault(require(\"./ParseQuery\"));\nvar _ParseObject = _interopRequireDefault(require(\"./ParseObject\"));\n/**\n * @flow\n */\n/*:: import type { RequestOptions } from './RESTController';*/\n/**\n * Contains functions for calling and declaring\n * <a href=\"/docs/cloud_code_guide#functions\">cloud functions</a>.\n * <p><strong><em>\n *   Some functions are only available from Cloud Code.\n * </em></strong></p>\n *\n * @class Parse.Cloud\n * @static\n * @hideconstructor\n */\n/**\n * Makes a call to a cloud function.\n *\n * @function run\n * @name Parse.Cloud.run\n * @param {string} name The function name.\n * @param {object} data The parameters to send to the cloud function.\n * @param {object} options\n * @returns {Promise} A promise that will be resolved with the result\n * of the function.\n */\nfunction run(name /*: string*/, data /*: mixed*/, options /*: RequestOptions*/) /*: Promise<mixed>*/{\n  options = options || {};\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new TypeError('Cloud function name must be a string.');\n  }\n  var requestOptions = {};\n  if (options.useMasterKey) {\n    requestOptions.useMasterKey = options.useMasterKey;\n  }\n  if (options.sessionToken) {\n    requestOptions.sessionToken = options.sessionToken;\n  }\n  if (options.context && (0, _typeof2.default)(options.context) === 'object') {\n    requestOptions.context = options.context;\n  }\n  return _CoreManager.default.getCloudController().run(name, data, requestOptions);\n}\n\n/**\n * Gets data for the current set of cloud jobs.\n *\n * @function getJobsData\n * @name Parse.Cloud.getJobsData\n * @returns {Promise} A promise that will be resolved with the result\n * of the function.\n */\nfunction getJobsData() /*: Promise<Object>*/{\n  return _CoreManager.default.getCloudController().getJobsData({\n    useMasterKey: true\n  });\n}\n\n/**\n * Starts a given cloud job, which will process asynchronously.\n *\n * @function startJob\n * @name Parse.Cloud.startJob\n * @param {string} name The function name.\n * @param {object} data The parameters to send to the cloud function.\n * @returns {Promise} A promise that will be resolved with the jobStatusId\n * of the job.\n */\nfunction startJob(name /*: string*/, data /*: mixed*/) /*: Promise<string>*/{\n  if (typeof name !== 'string' || name.length === 0) {\n    throw new TypeError('Cloud job name must be a string.');\n  }\n  return _CoreManager.default.getCloudController().startJob(name, data, {\n    useMasterKey: true\n  });\n}\n\n/**\n * Gets job status by Id\n *\n * @function getJobStatus\n * @name Parse.Cloud.getJobStatus\n * @param {string} jobStatusId The Id of Job Status.\n * @returns {Parse.Object} Status of Job.\n */\nfunction getJobStatus(jobStatusId /*: string*/) /*: Promise<ParseObject>*/{\n  var query = new _ParseQuery.default('_JobStatus');\n  return query.get(jobStatusId, {\n    useMasterKey: true\n  });\n}\nvar DefaultController = {\n  run: function (name, data, options /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    var payload = (0, _encode.default)(data, true);\n    var request = RESTController.request('POST', 'functions/' + name, payload, options);\n    return request.then(function (res) {\n      if ((0, _typeof2.default)(res) === 'object' && (0, _keys.default)(res).length > 0 && !res.hasOwnProperty('result')) {\n        throw new _ParseError.default(_ParseError.default.INVALID_JSON, 'The server returned an invalid response.');\n      }\n      var decoded = (0, _decode.default)(res);\n      if (decoded && decoded.hasOwnProperty('result')) {\n        return _promise.default.resolve(decoded.result);\n      }\n      return _promise.default.resolve(undefined);\n    });\n  },\n  getJobsData: function (options /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('GET', 'cloud_code/jobs/data', null, options);\n  },\n  startJob: function (name, data, options /*: RequestOptions*/) {\n    var RESTController = _CoreManager.default.getRESTController();\n    var payload = (0, _encode.default)(data, true);\n    return RESTController.request('POST', 'jobs/' + name, payload, options);\n  }\n};\n_CoreManager.default.setCloudController(DefaultController);"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}