{"ast":null,"code":"\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.track = track;\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n/**\n * @flow\n */\n\n/**\n * Parse.Analytics provides an interface to Parse's logging and analytics\n * backend.\n *\n * @class Parse.Analytics\n * @static\n * @hideconstructor\n */\n\n/**\n * Tracks the occurrence of a custom event with additional dimensions.\n * Parse will store a data point at the time of invocation with the given\n * event name.\n *\n * Dimensions will allow segmentation of the occurrences of this custom\n * event. Keys and values should be {@code String}s, and will throw\n * otherwise.\n *\n * To track a user signup along with additional metadata, consider the\n * following:\n * <pre>\n * var dimensions = {\n *  gender: 'm',\n *  source: 'web',\n *  dayType: 'weekend'\n * };\n * Parse.Analytics.track('signup', dimensions);\n * </pre>\n *\n * There is a default limit of 8 dimensions per event tracked.\n *\n * @function track\n * @name Parse.Analytics.track\n * @param {string} name The name of the custom event to report to Parse as\n * having happened.\n * @param {object} dimensions The dictionary of information by which to\n * segment this event.\n * @returns {Promise} A promise that is resolved when the round-trip\n * to the server completes.\n */\nfunction track(name /*: string*/, dimensions /*: { [key: string]: string }*/) /*: Promise*/{\n  name = name || '';\n  name = name.replace(/^\\s*/, '');\n  name = name.replace(/\\s*$/, '');\n  if (name.length === 0) {\n    throw new TypeError('A name for the custom event must be provided');\n  }\n  for (var _key in dimensions) {\n    if (typeof _key !== 'string' || typeof dimensions[_key] !== 'string') {\n      throw new TypeError('track() dimensions expects keys and values of type \"string\".');\n    }\n  }\n  return _CoreManager.default.getAnalyticsController().track(name, dimensions);\n}\nvar DefaultController = {\n  track: function (name, dimensions) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('POST', 'events/' + name, {\n      dimensions: dimensions\n    });\n  }\n};\n_CoreManager.default.setAnalyticsController(DefaultController);","map":{"version":3,"names":["_Object$defineProperty","require","_interopRequireDefault","exports","value","track","_CoreManager","name","dimensions","replace","length","TypeError","_key","default","getAnalyticsController","DefaultController","RESTController","getRESTController","request","setAnalyticsController"],"sources":["/home/mspadafo/compsci/MWD/pogg/node_modules/parse/lib/browser/Analytics.js"],"sourcesContent":["\"use strict\";\n\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.track = track;\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\n/**\n * @flow\n */\n\n/**\n * Parse.Analytics provides an interface to Parse's logging and analytics\n * backend.\n *\n * @class Parse.Analytics\n * @static\n * @hideconstructor\n */\n\n/**\n * Tracks the occurrence of a custom event with additional dimensions.\n * Parse will store a data point at the time of invocation with the given\n * event name.\n *\n * Dimensions will allow segmentation of the occurrences of this custom\n * event. Keys and values should be {@code String}s, and will throw\n * otherwise.\n *\n * To track a user signup along with additional metadata, consider the\n * following:\n * <pre>\n * var dimensions = {\n *  gender: 'm',\n *  source: 'web',\n *  dayType: 'weekend'\n * };\n * Parse.Analytics.track('signup', dimensions);\n * </pre>\n *\n * There is a default limit of 8 dimensions per event tracked.\n *\n * @function track\n * @name Parse.Analytics.track\n * @param {string} name The name of the custom event to report to Parse as\n * having happened.\n * @param {object} dimensions The dictionary of information by which to\n * segment this event.\n * @returns {Promise} A promise that is resolved when the round-trip\n * to the server completes.\n */\nfunction track(name /*: string*/, dimensions /*: { [key: string]: string }*/) /*: Promise*/{\n  name = name || '';\n  name = name.replace(/^\\s*/, '');\n  name = name.replace(/\\s*$/, '');\n  if (name.length === 0) {\n    throw new TypeError('A name for the custom event must be provided');\n  }\n  for (var _key in dimensions) {\n    if (typeof _key !== 'string' || typeof dimensions[_key] !== 'string') {\n      throw new TypeError('track() dimensions expects keys and values of type \"string\".');\n    }\n  }\n  return _CoreManager.default.getAnalyticsController().track(name, dimensions);\n}\nvar DefaultController = {\n  track: function (name, dimensions) {\n    var RESTController = _CoreManager.default.getRESTController();\n    return RESTController.request('POST', 'events/' + name, {\n      dimensions: dimensions\n    });\n  }\n};\n_CoreManager.default.setAnalyticsController(DefaultController);"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8DAA8D,CAAC;AACpG,IAAIC,sBAAsB,GAAGD,OAAO,CAAC,sDAAsD,CAAC;AAC5FD,sBAAsB,CAACG,OAAO,EAAE,YAAY,EAAE;EAC5CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,KAAK,GAAGA,KAAK;AACrB,IAAIC,YAAY,GAAGJ,sBAAsB,CAACD,OAAO,CAAC,eAAe,CAAC,CAAC;AACnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASI,KAAKA,CAACE,IAAI,CAAC,cAAcC,UAAU,CAAC,iCAAiC,aAAa;EACzFD,IAAI,GAAGA,IAAI,IAAI,EAAE;EACjBA,IAAI,GAAGA,IAAI,CAACE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC/BF,IAAI,GAAGA,IAAI,CAACE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;EAC/B,IAAIF,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;IACrB,MAAM,IAAIC,SAAS,CAAC,8CAA8C,CAAC;EACrE;EACA,KAAK,IAAIC,IAAI,IAAIJ,UAAU,EAAE;IAC3B,IAAI,OAAOI,IAAI,KAAK,QAAQ,IAAI,OAAOJ,UAAU,CAACI,IAAI,CAAC,KAAK,QAAQ,EAAE;MACpE,MAAM,IAAID,SAAS,CAAC,8DAA8D,CAAC;IACrF;EACF;EACA,OAAOL,YAAY,CAACO,OAAO,CAACC,sBAAsB,CAAC,CAAC,CAACT,KAAK,CAACE,IAAI,EAAEC,UAAU,CAAC;AAC9E;AACA,IAAIO,iBAAiB,GAAG;EACtBV,KAAK,EAAE,SAAAA,CAAUE,IAAI,EAAEC,UAAU,EAAE;IACjC,IAAIQ,cAAc,GAAGV,YAAY,CAACO,OAAO,CAACI,iBAAiB,CAAC,CAAC;IAC7D,OAAOD,cAAc,CAACE,OAAO,CAAC,MAAM,EAAE,SAAS,GAAGX,IAAI,EAAE;MACtDC,UAAU,EAAEA;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AACDF,YAAY,CAACO,OAAO,CAACM,sBAAsB,CAACJ,iBAAiB,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}