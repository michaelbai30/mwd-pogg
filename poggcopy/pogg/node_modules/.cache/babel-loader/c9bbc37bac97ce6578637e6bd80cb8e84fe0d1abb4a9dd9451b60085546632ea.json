{"ast":null,"code":"\"use strict\";\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var _context8, _context9;\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? _forEachInstanceProperty2(_context8 = ownKeys(Object(source), !0)).call(_context8, function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty2(_context9 = ownKeys(Object(source))).call(_context9, function (key) {\n      _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n} /**\n   * @flow\n   */ /* global XMLHttpRequest, Blob */\n/*:: import type { FullOptions } from './RESTController';*/\nvar ParseError = require('./ParseError').default;\nvar XHR = null;\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n/*:: type Base64 = { base64: string };*/\n/*:: type Uri = { uri: string };*/\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n/*:: export type FileSource =\n  | {\n      format: 'file',\n      file: Blob,\n      type: string,\n    }\n  | {\n      format: 'base64',\n      base64: string,\n      type: string,\n    }\n  | {\n      format: 'uri',\n      uri: string,\n      type: string,\n    };*/\nfunction b64Digit(number /*: number*/) /*: string*/{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n  if (number === 62) {\n    return '+';\n  }\n  if (number === 63) {\n    return '/';\n  }\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name /*: string*/, data /*:: ?: FileData*/, type /*:: ?: string*/, metadata /*:: ?: Object*/, tags /*:: ?: Object*/) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var _context, _context2, _context3;\n        var base64 = (0, _slice.default)(_context = data.base64.split(',')).call(_context, -1)[0];\n        var dataType = specifiedType || (0, _slice.default)(_context2 = (0, _slice.default)(_context3 = data.base64.split(';')).call(_context3, 0, 1)[0].split(':')).call(_context2, 1, 2)[0] || 'text/plain';\n        this._data = base64;\n        this._source = {\n          format: 'base64',\n          base64: base64,\n          type: dataType\n        };\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this._data) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\", this._data);\n            case 2:\n              if (this._url) {\n                _context4.next = 4;\n                break;\n              }\n              throw new Error('Cannot retrieve data for unsaved ParseFile.');\n            case 4:\n              options = {\n                requestTask: function (task) {\n                  return _this._requestTask = task;\n                }\n              };\n              controller = _CoreManager.default.getFileController();\n              _context4.next = 8;\n              return controller.download(this._url, options);\n            case 8:\n              result = _context4.sent;\n              this._data = result.base64;\n              return _context4.abrupt(\"return\", this._data);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee, this);\n      }));\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n      return getData;\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n  }, {\n    key: \"name\",\n    value: function () /*: string*/{\n      return this._name;\n    }\n\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string | undefined}\n     */\n  }, {\n    key: \"url\",\n    value: function (options /*:: ?: { forceSecure?: boolean }*/) /*: ?string*/{\n      options = options || {};\n      if (!this._url) {\n        return;\n      }\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"metadata\",\n    value: function () /*: Object*/{\n      return this._metadata;\n    }\n\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"tags\",\n    value: function () /*: Object*/{\n      return this._tags;\n    }\n\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise | undefined} Promise that is resolved when the save finishes.\n     */\n  }, {\n    key: \"save\",\n    value: function (options /*:: ?: FullOptions*/) /*: ?Promise*/{\n      var _this2 = this;\n      options = options || {};\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n      var controller = _CoreManager.default.getFileController();\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n\n    /**\n     * Aborts the request if it has already been sent.\n     */\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask._aborted = true;\n        this._requestTask.abort();\n      }\n      this._requestTask = null;\n    }\n\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * <pre>\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n      var options /*:: ?: FullOptions*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n      var destroyOptions = {\n        useMasterKey: true\n      };\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getFileController();\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function () /*: { name: ?string, url: ?string }*/{\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other /*: mixed*/) /*: boolean*/{\n      if (this === other) {\n        return true;\n      }\n      // Unsaved Files are never equal, since they will be saved to different URLs\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata /*: any*/) {\n      var _this4 = this;\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context5;\n        (0, _forEach.default)(_context5 = (0, _keys.default)(metadata)).call(_context5, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n  }, {\n    key: \"addMetadata\",\n    value: function (key /*: string*/, value /*: any*/) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n  }, {\n    key: \"setTags\",\n    value: function (tags /*: any*/) {\n      var _this5 = this;\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context6;\n        (0, _forEach.default)(_context6 = (0, _keys.default)(tags)).call(_context6, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n  }, {\n    key: \"addTag\",\n    value: function (key /*: string*/, value /*: string*/) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj) /*: ParseFile*/{\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes /*: Array<number>*/) /*: string*/{\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name /*: string*/, source /*: FileSource*/, options /*:: ?: FullOptions*/) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n      return _regenerator.default.wrap(function (_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(source.format !== 'file')) {\n              _context7.next = 2;\n              break;\n            }\n            throw new Error('saveFile can only be used with File-type sources.');\n          case 2:\n            _context7.next = 4;\n            return new _promise.default(function (res, rej) {\n              // eslint-disable-next-line no-undef\n              var reader = new FileReader();\n              reader.onload = function () {\n                return res(reader.result);\n              };\n              reader.onerror = function (error) {\n                return rej(error);\n              };\n              reader.readAsDataURL(source.file);\n            });\n          case 4:\n            base64Data = _context7.sent;\n            // we only want the data after the comma\n            // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n            _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n            // use the entire string instead\n            data = second ? second : first;\n            newSource = {\n              format: 'base64',\n              base64: data,\n              type: source.type || (source.file ? source.file.type : null)\n            };\n            _context7.next = 10;\n            return DefaultController.saveBase64(name, newSource, options);\n          case 10:\n            return _context7.abrupt(\"return\", _context7.sent);\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee2);\n    }));\n    function saveFile() {\n      return _saveFile.apply(this, arguments);\n    }\n    return saveFile;\n  }(),\n  saveBase64: function (name /*: string*/, source /*: FileSource*/, options /*:: ?: FullOptions*/) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n    var data /*: { base64: any, _ContentType?: any, fileData: Object }*/ = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n        if (!this.response) {\n          return resolve({});\n        }\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name /*: string*/, options /*:: ?: FullOptions*/) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n    var url = _CoreManager.default.get('SERVER_URL');\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr /*: any*/) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n_CoreManager.default.setFileController(DefaultController);\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;","map":{"version":3,"names":["_Object$keys2","require","_Object$getOwnPropertySymbols","_filterInstanceProperty","_Object$getOwnPropertyDescriptor","_forEachInstanceProperty2","_Object$getOwnPropertyDescriptors","_Object$defineProperties","_Object$defineProperty","_interopRequireDefault","exports","value","default","_regenerator","_isArray","_slice","_forEach","_keys","_promise","_indexOf","_slicedToArray2","_typeof2","_asyncToGenerator2","_classCallCheck2","_createClass2","_defineProperty2","_CoreManager","ownKeys","object","enumerableOnly","keys","symbols","call","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","_context8","_context9","source","Object","key","ParseError","XHR","XMLHttpRequest","b64Digit","number","String","fromCharCode","TypeError","ParseFile","name","data","type","metadata","tags","specifiedType","_name","_metadata","_tags","undefined","_data","encodeBase64","_source","format","base64","Blob","file","uri","_context","_context2","_context3","split","dataType","_getData","mark","_callee","_this","options","controller","result","wrap","_context4","prev","next","abrupt","_url","Error","requestTask","task","_requestTask","getFileController","download","sent","stop","getData","forceSecure","replace","_this2","_previousSave","saveFile","then","res","url","newSource","contentType","saveBase64","abort","_aborted","_this3","FILE_DELETE_UNNAMED_ERROR","destroyOptions","useMasterKey","hasOwnProperty","deleteFile","__type","other","_this4","_context5","addMetadata","_this5","_context6","addTag","obj","bytes","chunks","Math","ceil","b1","b2","b3","has2","has3","join","DefaultController","_saveFile","_callee2","base64Data","_base64Data$split","_base64Data$split2","first","second","_context7","rej","reader","FileReader","onload","onerror","error","readAsDataURL","fileData","_ContentType","getRESTController","request","downloadAjax","reject","resolve","xhr","open","responseType","e","onreadystatechange","readyState","DONE","response","Uint8Array","getResponseHeader","send","headers","get","ajax","catch","handleError","_setXHR","_getXHR","setFileController","_default"],"sources":["/home/mspadafo/compsci/MWD/pogg/node_modules/parse/lib/browser/ParseFile.js"],"sourcesContent":["\"use strict\";\n\nvar _Object$keys2 = require(\"@babel/runtime-corejs3/core-js-stable/object/keys\");\nvar _Object$getOwnPropertySymbols = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols\");\nvar _filterInstanceProperty = require(\"@babel/runtime-corejs3/core-js-stable/instance/filter\");\nvar _Object$getOwnPropertyDescriptor = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor\");\nvar _forEachInstanceProperty2 = require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\");\nvar _Object$getOwnPropertyDescriptors = require(\"@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors\");\nvar _Object$defineProperties = require(\"@babel/runtime-corejs3/core-js-stable/object/define-properties\");\nvar _Object$defineProperty = require(\"@babel/runtime-corejs3/core-js-stable/object/define-property\");\nvar _interopRequireDefault = require(\"@babel/runtime-corejs3/helpers/interopRequireDefault\");\n_Object$defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime-corejs3/regenerator\"));\nvar _isArray = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/array/is-array\"));\nvar _slice = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/slice\"));\nvar _forEach = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/for-each\"));\nvar _keys = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/object/keys\"));\nvar _promise = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/promise\"));\nvar _indexOf = _interopRequireDefault(require(\"@babel/runtime-corejs3/core-js-stable/instance/index-of\"));\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/slicedToArray\"));\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/typeof\"));\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/asyncToGenerator\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/createClass\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime-corejs3/helpers/defineProperty\"));\nvar _CoreManager = _interopRequireDefault(require(\"./CoreManager\"));\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys2(object);\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = _filterInstanceProperty(symbols).call(symbols, function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var _context8, _context9;\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? _forEachInstanceProperty2(_context8 = ownKeys(Object(source), !0)).call(_context8, function (key) {\n      (0, _defineProperty2.default)(target, key, source[key]);\n    }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)) : _forEachInstanceProperty2(_context9 = ownKeys(Object(source))).call(_context9, function (key) {\n      _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n} /**\n   * @flow\n   */ /* global XMLHttpRequest, Blob */\n/*:: import type { FullOptions } from './RESTController';*/\nvar ParseError = require('./ParseError').default;\nvar XHR = null;\nif (typeof XMLHttpRequest !== 'undefined') {\n  XHR = XMLHttpRequest;\n}\n/*:: type Base64 = { base64: string };*/\n/*:: type Uri = { uri: string };*/\n/*:: type FileData = Array<number> | Base64 | Blob | Uri;*/\n/*:: export type FileSource =\n  | {\n      format: 'file',\n      file: Blob,\n      type: string,\n    }\n  | {\n      format: 'base64',\n      base64: string,\n      type: string,\n    }\n  | {\n      format: 'uri',\n      uri: string,\n      type: string,\n    };*/\nfunction b64Digit(number /*: number*/) /*: string*/{\n  if (number < 26) {\n    return String.fromCharCode(65 + number);\n  }\n  if (number < 52) {\n    return String.fromCharCode(97 + (number - 26));\n  }\n  if (number < 62) {\n    return String.fromCharCode(48 + (number - 52));\n  }\n  if (number === 62) {\n    return '+';\n  }\n  if (number === 63) {\n    return '/';\n  }\n  throw new TypeError('Tried to encode large digit ' + number + ' in base64.');\n}\n\n/**\n * A Parse.File is a local representation of a file that is saved to the Parse\n * cloud.\n *\n * @alias Parse.File\n */\nvar ParseFile = /*#__PURE__*/function () {\n  /**\n   * @param name {String} The file's name. This will be prefixed by a unique\n   *     value once the file has finished saving. The file name must begin with\n   *     an alphanumeric character, and consist of alphanumeric characters,\n   *     periods, spaces, underscores, or dashes.\n   * @param data {Array} The data for the file, as either:\n   *     1. an Array of byte value Numbers, or\n   *     2. an Object like { base64: \"...\" } with a base64-encoded String.\n   *     3. an Object like { uri: \"...\" } with a uri String.\n   *     4. a File object selected with a file upload control. (3) only works\n   *        in Firefox 3.6+, Safari 6.0.2+, Chrome 7+, and IE 10+.\n   *        For example:\n   * <pre>\n   * var fileUploadControl = $(\"#profilePhotoFileUpload\")[0];\n   * if (fileUploadControl.files.length > 0) {\n   *   var file = fileUploadControl.files[0];\n   *   var name = \"photo.jpg\";\n   *   var parseFile = new Parse.File(name, file);\n   *   parseFile.save().then(function() {\n   *     // The file has been saved to Parse.\n   *   }, function(error) {\n   *     // The file either could not be read, or could not be saved to Parse.\n   *   });\n   * }</pre>\n   * @param type {String} Optional Content-Type header to use for the file. If\n   *     this is omitted, the content type will be inferred from the name's\n   *     extension.\n   * @param metadata {Object} Optional key value pairs to be stored with file object\n   * @param tags {Object} Optional key value pairs to be stored with file object\n   */\n  function ParseFile(name /*: string*/, data /*:: ?: FileData*/, type /*:: ?: string*/, metadata /*:: ?: Object*/, tags /*:: ?: Object*/) {\n    (0, _classCallCheck2.default)(this, ParseFile);\n    (0, _defineProperty2.default)(this, \"_name\", void 0);\n    (0, _defineProperty2.default)(this, \"_url\", void 0);\n    (0, _defineProperty2.default)(this, \"_source\", void 0);\n    (0, _defineProperty2.default)(this, \"_previousSave\", void 0);\n    (0, _defineProperty2.default)(this, \"_data\", void 0);\n    (0, _defineProperty2.default)(this, \"_requestTask\", void 0);\n    (0, _defineProperty2.default)(this, \"_metadata\", void 0);\n    (0, _defineProperty2.default)(this, \"_tags\", void 0);\n    var specifiedType = type || '';\n    this._name = name;\n    this._metadata = metadata || {};\n    this._tags = tags || {};\n    if (data !== undefined) {\n      if ((0, _isArray.default)(data)) {\n        this._data = ParseFile.encodeBase64(data);\n        this._source = {\n          format: 'base64',\n          base64: this._data,\n          type: specifiedType\n        };\n      } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n        this._source = {\n          format: 'file',\n          file: data,\n          type: specifiedType\n        };\n      } else if (data && typeof data.uri === 'string' && data.uri !== undefined) {\n        this._source = {\n          format: 'uri',\n          uri: data.uri,\n          type: specifiedType\n        };\n      } else if (data && typeof data.base64 === 'string') {\n        var _context, _context2, _context3;\n        var base64 = (0, _slice.default)(_context = data.base64.split(',')).call(_context, -1)[0];\n        var dataType = specifiedType || (0, _slice.default)(_context2 = (0, _slice.default)(_context3 = data.base64.split(';')).call(_context3, 0, 1)[0].split(':')).call(_context2, 1, 2)[0] || 'text/plain';\n        this._data = base64;\n        this._source = {\n          format: 'base64',\n          base64: base64,\n          type: dataType\n        };\n      } else {\n        throw new TypeError('Cannot create a Parse.File with that data.');\n      }\n    }\n  }\n\n  /**\n   * Return the data for the file, downloading it if not already present.\n   * Data is present if initialized with Byte Array, Base64 or Saved with Uri.\n   * Data is cleared if saved with File object selected with a file upload control\n   *\n   * @returns {Promise} Promise that is resolve with base64 data\n   */\n  (0, _createClass2.default)(ParseFile, [{\n    key: \"getData\",\n    value: function () {\n      var _getData = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n        var _this = this;\n        var options, controller, result;\n        return _regenerator.default.wrap(function (_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!this._data) {\n                _context4.next = 2;\n                break;\n              }\n              return _context4.abrupt(\"return\", this._data);\n            case 2:\n              if (this._url) {\n                _context4.next = 4;\n                break;\n              }\n              throw new Error('Cannot retrieve data for unsaved ParseFile.');\n            case 4:\n              options = {\n                requestTask: function (task) {\n                  return _this._requestTask = task;\n                }\n              };\n              controller = _CoreManager.default.getFileController();\n              _context4.next = 8;\n              return controller.download(this._url, options);\n            case 8:\n              result = _context4.sent;\n              this._data = result.base64;\n              return _context4.abrupt(\"return\", this._data);\n            case 11:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee, this);\n      }));\n      function getData() {\n        return _getData.apply(this, arguments);\n      }\n      return getData;\n    }()\n    /**\n     * Gets the name of the file. Before save is called, this is the filename\n     * given by the user. After save is called, that name gets prefixed with a\n     * unique identifier.\n     *\n     * @returns {string}\n     */\n  }, {\n    key: \"name\",\n    value: function () /*: string*/{\n      return this._name;\n    }\n\n    /**\n     * Gets the url of the file. It is only available after you save the file or\n     * after you get the file from a Parse.Object.\n     *\n     * @param {object} options An object to specify url options\n     * @returns {string | undefined}\n     */\n  }, {\n    key: \"url\",\n    value: function (options /*:: ?: { forceSecure?: boolean }*/) /*: ?string*/{\n      options = options || {};\n      if (!this._url) {\n        return;\n      }\n      if (options.forceSecure) {\n        return this._url.replace(/^http:\\/\\//i, 'https://');\n      } else {\n        return this._url;\n      }\n    }\n\n    /**\n     * Gets the metadata of the file.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"metadata\",\n    value: function () /*: Object*/{\n      return this._metadata;\n    }\n\n    /**\n     * Gets the tags of the file.\n     *\n     * @returns {object}\n     */\n  }, {\n    key: \"tags\",\n    value: function () /*: Object*/{\n      return this._tags;\n    }\n\n    /**\n     * Saves the file to the Parse cloud.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     *   <li>sessionToken: A valid session token, used for making a request on\n     *     behalf of a specific user.\n     *   <li>progress: In Browser only, callback for upload progress. For example:\n     * <pre>\n     * let parseFile = new Parse.File(name, file);\n     * parseFile.save({\n     *   progress: (progressValue, loaded, total, { type }) => {\n     *     if (type === \"upload\" && progressValue !== null) {\n     *       // Update the UI using progressValue\n     *     }\n     *   }\n     * });\n     * </pre>\n     * </ul>\n     * @returns {Promise | undefined} Promise that is resolved when the save finishes.\n     */\n  }, {\n    key: \"save\",\n    value: function (options /*:: ?: FullOptions*/) /*: ?Promise*/{\n      var _this2 = this;\n      options = options || {};\n      options.requestTask = function (task) {\n        return _this2._requestTask = task;\n      };\n      options.metadata = this._metadata;\n      options.tags = this._tags;\n      var controller = _CoreManager.default.getFileController();\n      if (!this._previousSave) {\n        if (this._source.format === 'file') {\n          this._previousSave = controller.saveFile(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._data = null;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else if (this._source.format === 'uri') {\n          this._previousSave = controller.download(this._source.uri, options).then(function (result) {\n            if (!(result && result.base64)) {\n              return {};\n            }\n            var newSource = {\n              format: 'base64',\n              base64: result.base64,\n              type: result.contentType\n            };\n            _this2._data = result.base64;\n            _this2._requestTask = null;\n            return controller.saveBase64(_this2._name, newSource, options);\n          }).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        } else {\n          this._previousSave = controller.saveBase64(this._name, this._source, options).then(function (res) {\n            _this2._name = res.name;\n            _this2._url = res.url;\n            _this2._requestTask = null;\n            return _this2;\n          });\n        }\n      }\n      if (this._previousSave) {\n        return this._previousSave;\n      }\n    }\n\n    /**\n     * Aborts the request if it has already been sent.\n     */\n  }, {\n    key: \"cancel\",\n    value: function () {\n      if (this._requestTask && typeof this._requestTask.abort === 'function') {\n        this._requestTask._aborted = true;\n        this._requestTask.abort();\n      }\n      this._requestTask = null;\n    }\n\n    /**\n     * Deletes the file from the Parse cloud.\n     * In Cloud Code and Node only with Master Key.\n     *\n     * @param {object} options\n     * Valid options are:<ul>\n     *   <li>useMasterKey: In Cloud Code and Node only, causes the Master Key to\n     *     be used for this request.\n     * <pre>\n     * @returns {Promise} Promise that is resolved when the delete finishes.\n     */\n  }, {\n    key: \"destroy\",\n    value: function () {\n      var _this3 = this;\n      var options /*:: ?: FullOptions*/ = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this._name) {\n        throw new ParseError(ParseError.FILE_DELETE_UNNAMED_ERROR, 'Cannot delete an unnamed file.');\n      }\n      var destroyOptions = {\n        useMasterKey: true\n      };\n      if (options.hasOwnProperty('useMasterKey')) {\n        destroyOptions.useMasterKey = options.useMasterKey;\n      }\n      var controller = _CoreManager.default.getFileController();\n      return controller.deleteFile(this._name, destroyOptions).then(function () {\n        _this3._data = null;\n        _this3._requestTask = null;\n        return _this3;\n      });\n    }\n  }, {\n    key: \"toJSON\",\n    value: function () /*: { name: ?string, url: ?string }*/{\n      return {\n        __type: 'File',\n        name: this._name,\n        url: this._url\n      };\n    }\n  }, {\n    key: \"equals\",\n    value: function (other /*: mixed*/) /*: boolean*/{\n      if (this === other) {\n        return true;\n      }\n      // Unsaved Files are never equal, since they will be saved to different URLs\n      return other instanceof ParseFile && this.name() === other.name() && this.url() === other.url() && typeof this.url() !== 'undefined';\n    }\n\n    /**\n     * Sets metadata to be saved with file object. Overwrites existing metadata\n     *\n     * @param {object} metadata Key value pairs to be stored with file object\n     */\n  }, {\n    key: \"setMetadata\",\n    value: function (metadata /*: any*/) {\n      var _this4 = this;\n      if (metadata && (0, _typeof2.default)(metadata) === 'object') {\n        var _context5;\n        (0, _forEach.default)(_context5 = (0, _keys.default)(metadata)).call(_context5, function (key) {\n          _this4.addMetadata(key, metadata[key]);\n        });\n      }\n    }\n\n    /**\n     * Sets metadata to be saved with file object. Adds to existing metadata.\n     *\n     * @param {string} key key to store the metadata\n     * @param {*} value metadata\n     */\n  }, {\n    key: \"addMetadata\",\n    value: function (key /*: string*/, value /*: any*/) {\n      if (typeof key === 'string') {\n        this._metadata[key] = value;\n      }\n    }\n\n    /**\n     * Sets tags to be saved with file object. Overwrites existing tags\n     *\n     * @param {object} tags Key value pairs to be stored with file object\n     */\n  }, {\n    key: \"setTags\",\n    value: function (tags /*: any*/) {\n      var _this5 = this;\n      if (tags && (0, _typeof2.default)(tags) === 'object') {\n        var _context6;\n        (0, _forEach.default)(_context6 = (0, _keys.default)(tags)).call(_context6, function (key) {\n          _this5.addTag(key, tags[key]);\n        });\n      }\n    }\n\n    /**\n     * Sets tags to be saved with file object. Adds to existing tags.\n     *\n     * @param {string} key key to store tags\n     * @param {*} value tag\n     */\n  }, {\n    key: \"addTag\",\n    value: function (key /*: string*/, value /*: string*/) {\n      if (typeof key === 'string') {\n        this._tags[key] = value;\n      }\n    }\n  }], [{\n    key: \"fromJSON\",\n    value: function (obj) /*: ParseFile*/{\n      if (obj.__type !== 'File') {\n        throw new TypeError('JSON object does not represent a ParseFile');\n      }\n      var file = new ParseFile(obj.name);\n      file._url = obj.url;\n      return file;\n    }\n  }, {\n    key: \"encodeBase64\",\n    value: function (bytes /*: Array<number>*/) /*: string*/{\n      var chunks = [];\n      chunks.length = Math.ceil(bytes.length / 3);\n      for (var i = 0; i < chunks.length; i++) {\n        var b1 = bytes[i * 3];\n        var b2 = bytes[i * 3 + 1] || 0;\n        var b3 = bytes[i * 3 + 2] || 0;\n        var has2 = i * 3 + 1 < bytes.length;\n        var has3 = i * 3 + 2 < bytes.length;\n        chunks[i] = [b64Digit(b1 >> 2 & 0x3f), b64Digit(b1 << 4 & 0x30 | b2 >> 4 & 0x0f), has2 ? b64Digit(b2 << 2 & 0x3c | b3 >> 6 & 0x03) : '=', has3 ? b64Digit(b3 & 0x3f) : '='].join('');\n      }\n      return chunks.join('');\n    }\n  }]);\n  return ParseFile;\n}();\nvar DefaultController = {\n  saveFile: function () {\n    var _saveFile = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(name /*: string*/, source /*: FileSource*/, options /*:: ?: FullOptions*/) {\n      var base64Data, _base64Data$split, _base64Data$split2, first, second, data, newSource;\n      return _regenerator.default.wrap(function (_context7) {\n        while (1) switch (_context7.prev = _context7.next) {\n          case 0:\n            if (!(source.format !== 'file')) {\n              _context7.next = 2;\n              break;\n            }\n            throw new Error('saveFile can only be used with File-type sources.');\n          case 2:\n            _context7.next = 4;\n            return new _promise.default(function (res, rej) {\n              // eslint-disable-next-line no-undef\n              var reader = new FileReader();\n              reader.onload = function () {\n                return res(reader.result);\n              };\n              reader.onerror = function (error) {\n                return rej(error);\n              };\n              reader.readAsDataURL(source.file);\n            });\n          case 4:\n            base64Data = _context7.sent;\n            // we only want the data after the comma\n            // For example: \"data:application/pdf;base64,JVBERi0xLjQKJ...\" we would only want \"JVBERi0xLjQKJ...\"\n            _base64Data$split = base64Data.split(','), _base64Data$split2 = (0, _slicedToArray2.default)(_base64Data$split, 2), first = _base64Data$split2[0], second = _base64Data$split2[1]; // in the event there is no 'data:application/pdf;base64,' at the beginning of the base64 string\n            // use the entire string instead\n            data = second ? second : first;\n            newSource = {\n              format: 'base64',\n              base64: data,\n              type: source.type || (source.file ? source.file.type : null)\n            };\n            _context7.next = 10;\n            return DefaultController.saveBase64(name, newSource, options);\n          case 10:\n            return _context7.abrupt(\"return\", _context7.sent);\n          case 11:\n          case \"end\":\n            return _context7.stop();\n        }\n      }, _callee2);\n    }));\n    function saveFile() {\n      return _saveFile.apply(this, arguments);\n    }\n    return saveFile;\n  }(),\n  saveBase64: function (name /*: string*/, source /*: FileSource*/, options /*:: ?: FullOptions*/) {\n    if (source.format !== 'base64') {\n      throw new Error('saveBase64 can only be used with Base64-type sources.');\n    }\n    var data /*: { base64: any, _ContentType?: any, fileData: Object }*/ = {\n      base64: source.base64,\n      fileData: {\n        metadata: _objectSpread({}, options.metadata),\n        tags: _objectSpread({}, options.tags)\n      }\n    };\n    delete options.metadata;\n    delete options.tags;\n    if (source.type) {\n      data._ContentType = source.type;\n    }\n    return _CoreManager.default.getRESTController().request('POST', 'files/' + name, data, options);\n  },\n  download: function (uri, options) {\n    if (XHR) {\n      return this.downloadAjax(uri, options);\n    } else {\n      return _promise.default.reject('Cannot make a request: No definition of XMLHttpRequest was found.');\n    }\n  },\n  downloadAjax: function (uri, options) {\n    return new _promise.default(function (resolve, reject) {\n      var xhr = new XHR();\n      xhr.open('GET', uri, true);\n      xhr.responseType = 'arraybuffer';\n      xhr.onerror = function (e) {\n        reject(e);\n      };\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState !== xhr.DONE) {\n          return;\n        }\n        if (!this.response) {\n          return resolve({});\n        }\n        var bytes = new Uint8Array(this.response);\n        resolve({\n          base64: ParseFile.encodeBase64(bytes),\n          contentType: xhr.getResponseHeader('content-type')\n        });\n      };\n      options.requestTask(xhr);\n      xhr.send();\n    });\n  },\n  deleteFile: function (name /*: string*/, options /*:: ?: FullOptions*/) {\n    var headers = {\n      'X-Parse-Application-ID': _CoreManager.default.get('APPLICATION_ID')\n    };\n    if (options.useMasterKey) {\n      headers['X-Parse-Master-Key'] = _CoreManager.default.get('MASTER_KEY');\n    }\n    var url = _CoreManager.default.get('SERVER_URL');\n    if (url[url.length - 1] !== '/') {\n      url += '/';\n    }\n    url += 'files/' + name;\n    return _CoreManager.default.getRESTController().ajax('DELETE', url, '', headers).catch(function (response) {\n      // TODO: return JSON object in server\n      if (!response || response === 'SyntaxError: Unexpected end of JSON input') {\n        return _promise.default.resolve();\n      } else {\n        return _CoreManager.default.getRESTController().handleError(response);\n      }\n    });\n  },\n  _setXHR: function (xhr /*: any*/) {\n    XHR = xhr;\n  },\n  _getXHR: function () {\n    return XHR;\n  }\n};\n_CoreManager.default.setFileController(DefaultController);\nvar _default = ParseFile;\nexports.default = _default;\nexports.b64Digit = b64Digit;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}